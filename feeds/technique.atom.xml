<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>JoshuaZhang</title><link href="http://www.joshuazhang.net/" rel="alternate"></link><link href="http://www.joshuazhang.net/feeds/technique.atom.xml" rel="self"></link><id>http://www.joshuazhang.net/</id><updated>2014-11-23T00:00:00+08:00</updated><entry><title>Kindle好玩物</title><link href="http://www.joshuazhang.net/posts/2014/kindle-fun.html" rel="alternate"></link><updated>2014-11-23T00:00:00+08:00</updated><author><name>Joshz</name></author><id>tag:www.joshuazhang.net,2014-11-21:posts/2014/kindle-fun.html</id><summary type="html">&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;选购&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#kindle"&gt;Kindle还是平板？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;产品线&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;系统&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_4"&gt;原生系统&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_5"&gt;多看系统&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#jb-koreader"&gt;JB + KOReader&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_6"&gt;关于越狱&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_7"&gt;内容推送&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_8"&gt;设备绑定&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_9"&gt;推送地址&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_10"&gt;推送源&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_11"&gt;笔记管理&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_12"&gt;笔记备份&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_13"&gt;其它工具&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_14"&gt;网络资源&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_15"&gt;电子书&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#kindle_1"&gt;Kindle资料&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_16"&gt;固件更新&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;入手Kindle paperwhite一年多，其实折腾地不多，书看了还是不少的。本文只是自己使用过程中产品背景知识与折腾技能积累，给想入手或者已入手还没玩开的同好一个参考。&lt;/p&gt;
&lt;h2 id="_1"&gt;选购&lt;/h2&gt;
&lt;p&gt;这不是一个专业的导购指南，所以只谈谈自己对Kindle市场定位的理解，既不能保证权威性也不能肯定正确性，但是菜已经端上，判断好不好吃就要看食客的经验和头脑了。&lt;/p&gt;
&lt;h3 id="kindle"&gt;Kindle还是平板？&lt;/h3&gt;
&lt;p&gt;相比平板电脑的无所不能，Kindle电纸书就像个老弱残兵,灰度屏幕，没有娱乐，孱弱的上网功能，似乎注定了黯淡的市场前景。不过，对于真正喜爱读书的人而言，Kindle给他们提供的不是一款电子设备，而是读书的禅意。即便你不是Kindle的脑残粉，下面的几个理由也是值得你考量的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;阅读体验。我没有专业的评测，但是对着IPS液晶屏和e-ink屏幕，只有眼睛的感受是最真实的。电子墨水屏幕没有愧对它的名字，在视觉上确实具有传统纸张一样的质感，这保证你连续看两个小时都不会有明显的不适（个人体验因人而异）。&lt;/li&gt;
&lt;li&gt;超长待机使用时间。这与Kindle的定位与软硬件设计是相适应的，很显然，如果读书的时候老是不自觉地去查看电量，那么读书的乐趣何在呢？&lt;/li&gt;
&lt;li&gt;无干扰阅读环境。一个具有很强自控力的人即便在电脑前也可以疵牙咧嘴地看完一本彩页pdf电子书，但是注意力涣散的人一本纸质书也要磨蹭大半年。人的差异固然存在，不过也不能忽略环境对人注意力的影响，弱化的娱乐和连接功能使得你不能不聚焦在读书这唯一的乐事上，这对很多人是一种莫大的帮助。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;客观地说，Kindle看电子书仍然有不完美的地方（但不是硬性限制），罗列如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;图片支持差。电子书内嵌的图片无法放缩，往往看不到最佳显示效果，因此含大量图片的电子书不推荐在阅读器上阅读。不过在PC/平板上Kindle软件的显示效果不坑爹，所以也不用太担心。这里也要对Amazon软硬件生态一体布局的大手笔点下赞。&lt;/li&gt;
&lt;li&gt;公式、源代码支持差。公式往往影响排版的页面切分，源代码则高亮不起来（黑白的还想怎么滴？），因此专业的理工科书籍还是得看纸质版。&lt;/li&gt;
&lt;li&gt;电子书的数量和质量。电子书市场现在发展飞快，Amazon也在不断增加电子书覆盖的范围，但目前稍微冷门一点的书籍一般都没有电子版，而且仍然存在排版混乱、文字错误等各种质量问题，相比豆瓣出品还有距离。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;总结一下，Kindle适合阅读包含大量文字内容的电子书，文史哲类看起来很舒服，理工类电子资源也可以看，但体验还有很大的提升空间。说到这里，你一定看出来了，不光是你在挑产品，Kindle也在挑选合适的消费者。&lt;/p&gt;
&lt;h3 id="_2"&gt;产品线&lt;/h3&gt;
&lt;p&gt;Kindle家族到现在已经颇为庞大，Kindle 3、4、5一脉相承，Kindle Touch和Paperwhite主打触摸屏，DXG的9寸屏则是PDF大杀器（对土豪来说应该&lt;a href="http://store.sony.com/digital-paper-system-zid27-DPTS1/cat-27-catid-digital-paper"&gt;Sony DPTS1&lt;/a&gt;更合适吧）。目前来说，支持背光的KPW基本是入手的首选，国行价格也不怎么坑，还可以开发票^_^。几款新产品的细微区别可以参考&lt;a href="http://kindlefere.com/post/56.html"&gt;一张漫画告诉你 KPW、KV 和新 Kindle 的区别&lt;/a&gt;，萌萌哒。&lt;/p&gt;
&lt;h2 id="_3"&gt;系统&lt;/h2&gt;
&lt;h3 id="_4"&gt;原生系统&lt;/h3&gt;
&lt;p&gt;对比KPW刚发售时系统的简陋，现在的Kindle原生系统已经成熟，中文支持完美，界面简洁易用，可以配合众多优秀的国外服务。当然这不是说它没有缺点，比如可定制性差（这个也许算个优点！），不支持epub格式，不能自适应非六寸PDF等等。如果你对某个缺点十分不满意，那么你仍然有第三方选择。当然，如果你没有那么多强迫症，只想专心看书，那我强烈推荐保持原生系统。&lt;/p&gt;
&lt;h3 id="_5"&gt;多看系统&lt;/h3&gt;
&lt;p&gt;目前真正的“第三方”选择是指多看系统。到现在为止我都没用过该系统，所以“手感”我就不评价了。当然我不选择它是有原因的，一是它不兼容Amazon的推送地址，而是用&lt;code&gt;@iduokan.com&lt;/code&gt;，而我大部分推送地址已经使用了Amazon，同时我对Amazon的服务相对更有信心，虽然小米也是很有前途的公司；二是它不能与原生系统共存（不然叫啥第三方？），相比“双系统”架构，我喜欢“虚拟机”方案多一点。我这里没说多看的优点，不代表它没有，不过目前对我吸引力不够。&lt;/p&gt;
&lt;p&gt;多看适合对原生系统不满意又不具备足够折腾技能（多看不需要越狱）的孩子，折腾党不越狱怎么好意思说自己折腾？&lt;/p&gt;
&lt;h3 id="jb-koreader"&gt;JB + KOReader&lt;/h3&gt;
&lt;p&gt;我目前使用的方案是原生系统JailBreak+ &lt;a href="http://kindlefere.com/post/39.html"&gt;KOReader&lt;/a&gt; ，也是我个人推荐的方案，优点就是除了保持原生系统的特性之外，还添加了epub、djvu、chm等文档格式支持，此外还有强大的扫描PDF、djvu重排功能。这个组合和多看目前的功能已经处在同一水平线上了。只不过要安装KOReader需要先越狱，算是一个比较大的劣势吧。如果你对自己的折腾水平和阅读英文文档的能力有信心的话那我举双手双脚推荐。&lt;/p&gt;
&lt;h3 id="_6"&gt;关于越狱&lt;/h3&gt;
&lt;p&gt;越狱的内容十分琐碎，网上资料也很多，就不详细写了，推荐查看 &lt;a href="http://kindlefere.com/post/33.html"&gt;三步搞定！Kindle Paperwhite 2 越狱教程&lt;/a&gt;。只要注意几点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;由于开发越狱工具需要时间，因此最新版固件往往无法越狱且不能降级，升级固件时需要考虑有无越狱需要。&lt;/li&gt;
&lt;li&gt;备份是折腾的基础。&lt;/li&gt;
&lt;li&gt;解除越狱只需要重置设备即可。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_7"&gt;内容推送&lt;/h2&gt;
&lt;h3 id="_8"&gt;设备绑定&lt;/h3&gt;
&lt;p&gt;Kindle设备理论上可以绑定到Amazon服务的任意地区，但各地区之间并不共享帐号（美亚和中亚可使用同一账户名，但密码不能相同），所以用户必须做唯一的选择。绑定美亚则可以购买众多价格不菲的英文原版电子书，中文资源却少的可怜；绑定中亚则相对而言更实惠一些，中文资源也是主流。&lt;/p&gt;
&lt;h3 id="_9"&gt;推送地址&lt;/h3&gt;
&lt;p&gt;Amazon不是在卖硬件，而是在卖服务，总之它正在下很大一盘棋，不然你怎么能在各个平台上看到&lt;code&gt;Kindle Reader&lt;/code&gt;呢？其中最重要的服务就是网络推送。其实很简单，Amazon为每个Kindle买家提供一个邮箱地址，所有发送到该地址的规范文档格式都会在Kindle联网时同步到本地。用户应该根据自己的情况选择合适的地址：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;@kindle.cn&lt;/code&gt;，国内绑定的邮箱，中文用户首选。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@kindle.com&lt;/code&gt;，用于所有Kindle型号（3G和Wi-Fi）。对于只有Wi-Fi的Kindle，递送过程不收费。对于有3G上网功能的Kindle，如果是通过Wi-Fi收取也不收费，但是对于通过3G收取Amazon会收取一部分流量费用。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@free.kindle.com&lt;/code&gt;，用于Kindle Wi-Fi，递送过程不收费。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_10"&gt;推送源&lt;/h3&gt;
&lt;p&gt;目前推送源主要有这几类：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;第三方新闻内容定时推送。RSS推送固然方便，但是订阅太多也会造成信息过载，量力而行。&lt;ul&gt;
&lt;li&gt;&lt;a href="http://kindle4rss.com/"&gt;Kindle4rss&lt;/a&gt;，英文全文订阅源&lt;/li&gt;
&lt;li&gt;&lt;a href="http://dogear.cn/"&gt;狗耳朵&lt;/a&gt;，有微信公众号推送服务&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.hikindle.com/"&gt;hikindle&lt;/a&gt;，VIP可推送电子杂志&lt;/li&gt;
&lt;li&gt;&lt;a href="http://readcola.com"&gt;Readcola&lt;/a&gt;，免费版支持16个订阅源，支持全文抓取&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;手动内容推送。用户自己可以手动转发或采集网络内容发至第三方服务器，经过累积和处理后再推送至Kindle。由于Kindle阅读容易集中注意力，因此适合阅读有深度的文章，“太长不看”的文章都可以收集起来推送给Kindle搞定。&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.readability.com/"&gt;Readability&lt;/a&gt;，最佳网文推送服务，抓取算法稍逊，可推送图片，免费账户也可定时累积推送。其它功能包括社交化、数据导出和专有邮件接收地址等。&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.instapaper.com/"&gt;Instapaper&lt;/a&gt;，最早的推送网站，网页抓取算法不错，不能推送图片，免费账户也可定时累积推送。&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.klip.me/"&gt;Klip.me&lt;/a&gt;，依托Google App Engine的网页推送网站（以前和Google Reader集成），网页抓取算法好，支持图片，不过文章分单篇推送，不方便管理。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;第三方电子书推送。&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.readfar.com/"&gt;读远&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.mlook.mobi/"&gt;mlook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://readfree.me/"&gt;Readfree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.kindlemi.com/books"&gt;Kindle迷&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://book.zi5.me/"&gt;子午书简&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.ikandou.com/"&gt;爱看豆&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;邮件推送。用户或者一些邮件订阅通过邮件转发至推送邮箱，也很方便。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="_11"&gt;笔记管理&lt;/h2&gt;
&lt;p&gt;首先应当明确亚马逊对电子书笔记的处理是完全与云端的电子书绑定的，即如果删除了云端的电子书，那么笔记也会相应的删除（参考：&lt;a href="http://tieba.baidu.com/p/2616398627"&gt;http://tieba.baidu.com/p/2616398627&lt;/a&gt;）。&lt;/p&gt;
&lt;h3 id="_12"&gt;笔记备份&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.clippings.io"&gt;Clippings.io&lt;/a&gt;（原ClippingsConverter）提供笔记导出/同步服务，免费版可上传&lt;code&gt;My Clippings.txt&lt;/code&gt;并导出为各种格式或者同步到Evernote，收费版使用Chrome扩展，不仅支持文件导入，也支持对Kindle各个软件客户端的识别，不过目前好像在国内无法付费购买。&lt;/li&gt;
&lt;li&gt;使用Koreader自带的导出到Evernote功能。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;具体可参考&lt;a href="http://www.zhihu.com/question/22356174/answer/21121444?group_id=139440893"&gt;知乎：如何将 Kindle Paperwhite 读书笔记导入到 Evernote 印象笔记？&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="_13"&gt;其它工具&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://calibre-ebook.com/"&gt;Calibre&lt;/a&gt;：开源的电子书管理利器，支持各类电子书格式阅读与转换，支持各类掌上阅读器。&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.willus.com/k2pdfopt/"&gt;Willus.com's K2pdfopt&lt;/a&gt;：制作6寸pdf的神器，不过有了Koreader，你还会那么勤快么？&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.douban.com/group/kindlemate/"&gt;Kindle Mate&lt;/a&gt;：用于导入Myclippings.txt并管理书籍高亮与标注，管理笔记的本地方案。&lt;/li&gt;
&lt;li&gt;&lt;a href="http://kindlefere.com/post/43.html"&gt;sdr-Cleaner&lt;/a&gt;：一键清理删除无用 sdr 文件夹&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.pdf4kindle.com/"&gt;pdf4kindle.com&lt;/a&gt;：免费的在线pdf转mobi、azw服务。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_14"&gt;网络资源&lt;/h2&gt;
&lt;h3 id="_15"&gt;电子书&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.haodoo.net/?M=hd&amp;amp;P=welcome"&gt;好讀&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.inien.com/"&gt;亿年书海&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.igghh.com/"&gt;免费电子书库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cnepub.com/discuz/forum.php"&gt;掌上书苑&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.jp-comic.com/"&gt;日漫小站&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="kindle_1"&gt;Kindle资料&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://kindlefere.com/"&gt;Kindle伴侣&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://kindleren.com/portal.php"&gt;Kindle人&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://tieba.baidu.com/f?kw=kindle"&gt;Kindle吧&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_16"&gt;固件更新&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.amazon.cn/gp/help/customer/display.html/ref=hp_bc_nav?ie=UTF8&amp;amp;nodeId=200529680"&gt;Amazon官方&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://kindlefere.com/update"&gt;Kindle伴侣-固件大全&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Kindle"></category></entry><entry><title>告别GoogleReader</title><link href="http://www.joshuazhang.net/posts/2013/goodbay-to-googlereader.html" rel="alternate"></link><updated>2013-06-14T18:47:00+08:00</updated><author><name>Joshz</name></author><id>tag:www.joshuazhang.net,2013-06-14:posts/2013/goodbay-to-googlereader.html</id><summary type="html">&lt;p&gt;GoogleReader即将于7月1日正式退役，目前看来这是板上钉钉了，在这天到来之前，一些必要的备份转移工作现在已经可以开始了。在开始之前，先得说点场面话。&lt;/p&gt;
&lt;h2 id="_1"&gt;告别一个时代&lt;/h2&gt;
&lt;p&gt;在GR弥留之际，写几句不疼不痒的挽联，算是给心头爱将一个名分吧。我2010年才开始深度使用GR，当时深感这是一款伟大的产品，不仅仅是为浏览信息提供了方便，更是为我们从越来越庞大的互联网探索获取信息提供自动化的方法，虽然目前这种自动化智能程度还比较低，但是如果我们10年后不再需要事必躬亲地获取信息而是等待智能的推送，那么我们也不应该忘了GR的一份功劳。虽然Google不是RSS的制定者，也未必最先想到云RSS阅读的点子，但是毋庸置疑GR是普及这一想法并彻底改变我等“信息狂躁症”患者生活的最大功臣。如果认真分析，GR的价值体现在这几个方面：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;免费。技术普及的门槛就是价格，一款免费而具有收费服务品质的产品没人不喜欢。&lt;/li&gt;
&lt;li&gt;海量数据和高速运算。GR之所以能够傲视群雄就在于它依托了Google的服务器集群。&lt;/li&gt;
&lt;li&gt;搜索和排序。海量数据是不能用文件夹或者标签管理的，搜索是惟一解决方案；而排序则是我所说的智能推送的雏形。这两点在当下并非产品的重点，但是几年后呢？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上面几点是GR在同类产品竞争中立于不败之地的法宝，也是很多产品难以复制GR的瓶颈所在。当然取得这么大的优势需要超越别人200%的付出，那就是高企的成本和可怜的收入。从经济角度看，Google砍掉GR并非多么难以理解的事情，而对Google进行道德上的评判，我不觉得很多人有充分的理由。一款免费服务坚持了这么久，为用户带来了这么多便利，即便没有功劳也有苦劳吧，何况Google还为使用者预留了充足的时间准备后路，为什么大众还不领情呢？&lt;/p&gt;
&lt;p&gt;或许这关系到Google的企业形象。众所周知Google以广告盈利，而广告要发挥应有的作用就需要十分普及的平台，Google的当家产品如搜索、地图、Android都是搭建了一个广告的理想平台，而广告在GR上却失败了。大众一直把Google当成信息科技革命的领头人，而它的产品也确实以免费、创新树立了这样的“无私”形象，但是也许现在的Google已经不是那个敢闯敢干的Google了，帝国的盈利压力让它不得不作出这样的决定。GR是这么一款革命的、具有重大科技价值的产品，并且积累了如果好的人脉和口碑，但是它却向“油盐酱醋茶”低头了。如果做个不恰当的类比，史冬鹏怎么跑都没人关心，刘翔，哼，他没有资本失败。&lt;/p&gt;
&lt;p&gt;牢骚发完了，生活还要继续，Google也要照用。下面讲讲怎么无痛地告别一个时代。&lt;/p&gt;
&lt;h2 id="_2"&gt;整理订阅源&lt;/h2&gt;
&lt;p&gt;如果你和我一样有着几百个订阅源，并且有着众多的子目录，那么管理它们就不是一个轻松愉快的差事。我强烈建议从GR转出之前进行一次系统的整理，因为目前很多替代服务管理订阅源操作很繁琐很费时，甚至根本没有拿得出手的订阅源管理功能，相对而言，GR的操作还是很方便快捷的。&lt;/p&gt;
&lt;p&gt;对我而言，订阅源管理主要是精简源数目以及删除无收藏价值的加星文章。如果你的订阅源不多，那你可以使用探索功能挖掘一些推荐的源，算是发挥下GR的剩余价值，不过我很怀疑还有多少GR用户没有感到“信息过载”的。许多加星文章年代久远已经失去了收藏价值，不妨大方删除，如果你很懒，那也可以不管它，下面有方便的方法备份这些文章。至于精简源数目，我个人遵循这么几个原则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;文章性价比。许多源发布频率太高，而深度不够，徒然增大了阅读的压力，比如许多IT新闻源。&lt;/li&gt;
&lt;li&gt;收藏性。有些网站虽然不再更新，但是文章收藏性很高，我选择让它们默默地躺在那里。&lt;/li&gt;
&lt;li&gt;源的质量。许多源不提供全文，或者图片经常挂，阅读起来很不省心，这些客观因素可以判它们死刑。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;随着GR关闭，&lt;a href="http://www.williamlong.info/archives/3409.html"&gt;FeedBurner是否会关闭也成了未知数&lt;/a&gt; 。许多博客订阅地址都采用FeedBurner的服务，如果Google足够狠心，那么到时候大批的订阅源会失效。这个问题对订阅者来说还不怎么紧迫，但是对博主或站长而言是时候将订阅地址切换到自己子域名了。&lt;/p&gt;
&lt;h2 id="_3"&gt;服务转移&lt;/h2&gt;
&lt;p&gt;虽然其实我们有其它的选择，比如本地阅读器、邮件转发订阅、自建在线阅读器等，但是相信很依赖GR的朋友肯定希望有能至少复制70% GR 功能的在线托管阅读器吧，这方面其实我们的选择也不少，至于是否达到了70%那就见仁见智了。对这些在线服务进行评价，我个人比较看重这几个方面，整理出来仅供参考。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;收费策略。目前而言免费的居多，但是GR死在沙滩上了，大家难免心有余悸，所以有些收费的服务也值得考虑。（其实我很纳闷，GR为什么不转收费呢？难道用户少到连这样的尝试都不可行吗，毕竟GAE都收费了。）&lt;/li&gt;
&lt;li&gt;操作便利性。如果一款在线阅读器不支持快捷键，那和我自己去网站刷页面有什么区别呢?曾经的 feedly 花哨有余、效率不足，给我留下的印象并不好，不知道有没有改观。&lt;/li&gt;
&lt;li&gt;速度与界面。访问服务器的速度和抓取文章的速度二者缺一不可，难以想象总是对着 loading 是什么感觉。GR的快一方面还来自于其简洁的界面，它代表更多的信息和更快的过滤。&lt;/li&gt;
&lt;li&gt;抓取能力与范围。GR的订阅文章更新几乎是实时的，而我试用过的一些其它产品却未能达到这么快速，应该和服务器资源有关。至于范围，身处天朝，GR曾经是一把多么好的梯子，而现在，感觉一夜回到解放前了！因为这一点，许多国内还不错的服务就给pass掉了，如果GFW对你影响不大，那你也可以支持国货。&lt;/li&gt;
&lt;li&gt;HTTPS支持。对靠谱的网站而言该功能基本是标配了，没有的话真不知道该说什么好。必须的理由见上一条。&lt;/li&gt;
&lt;li&gt;统计分析功能。也许这并不常用，但是一旦需要你才知道它多么有用。&lt;/li&gt;
&lt;li&gt;手机端支持。目前对我而言非必需，但是计划赶不上变化，而且手机确实是大势所趋。&lt;/li&gt;
&lt;li&gt;订阅源管理。如果订阅源很多，总有一天你会在这上面花费大量时间，有方便的管理功能才能感觉幸福。&lt;/li&gt;
&lt;li&gt;第三方api推送集成。这是扩展阅读器功能的有效方式，GR可是可以自己定制的哦。&lt;/li&gt;
&lt;li&gt;账户管理与托管服务商可信度。隐私和信息安全很容易被忽略，但最好别忘记。如果要购买收费服务，一定要确认服务托管商的可信度，在混乱的环境下很容易浑水摸鱼。&lt;/li&gt;
&lt;li&gt;备份导出功能。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;除了上面这些主要的方面，还有一些细节让所有的GR用户欲罢不能，在相同的起跑线和能力上，细节决定成败。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;有些网站没有提供RSS订阅或者隐藏在犄角旮旯里，如果我们直接添加主网址，GR也可以”智能“地分析出订阅地址（智能的方式可能是常见地址模式猜测，或者订阅地址数据库搜索）&lt;/li&gt;
&lt;li&gt;GR的条目跳转很流畅，也很符合使用者的预期，而很多替代品会跳乱掉甚至失焦。另外，GR的操作条目有很明显的高亮，有些产品就不那么好分辨。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一些值得测试的在线RSS阅读器及其特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://theoldreader.com/"&gt;theoldreader&lt;/a&gt;，快捷键支持最像GR，速度较快，界面简洁性还有提升空间，功能还较简单。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.inoreader.com/"&gt;inoreader&lt;/a&gt;，界面最有GR范，速度有点慢，貌似对GR导入支持很好，开发比较活跃，功能也可很强，服务可靠性待检验。&lt;/li&gt;
&lt;li&gt;&lt;a href="http://yanobs.com/reader/"&gt;yanobs&lt;/a&gt;，免费版各方面都一般，不支持SSL。。。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.newszeit.com"&gt;NewsZeit&lt;/a&gt;，基于开源的NewsBlur，免费版功能受限，但速度很快（东京服务器），界面上不如inoreader但强于theoldreader，国人定制支持，更适合国情，可靠性待检验。&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.feedly.com/"&gt;feedly&lt;/a&gt;，未测试&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.newsblur.com/"&gt;NewsBlur&lt;/a&gt;，未测试&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.netvibes.com/"&gt;NetVibes&lt;/a&gt;，未测试&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.favo.me/reader/view/"&gt;favo.me&lt;/a&gt;，界面清爽大气，很简单的快捷键支持，支持GR导入，但是加星条目最大可导入500条。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://yoleoreader.com/"&gt;yoleoreader&lt;/a&gt;，未测试。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2013-08-25 15:34更新：
经过这么长时间的调整，雨后春笋般冒出的GR替代服务基本都已经走向成熟，一个详细的列表可以参考 &lt;a href="http://alternativeto.net/software/google-reader/?sort=likes"&gt;这里&lt;/a&gt; ，其中排名第一的 &lt;a href="http://www.feedspot.com/"&gt;FeedSpot&lt;/a&gt; 值得一试。&lt;/p&gt;
&lt;h2 id="_4"&gt;整体备份&lt;/h2&gt;
&lt;p&gt;即便我们把订阅源转出去了，也一定不要认为可以安枕无忧了。比Google无良的企业比比皆是，说不准哪一天你就发现自己常用的服务消失了，而通知仅仅是一天前或者根本没通知。因此，保险起见，我们不仅可以多测试几个替代服务，同时也要做好订阅源Takeout导出备份。这个操作没有难度，也就不赘述了。&lt;/p&gt;
&lt;p&gt;麻烦的是加星标文章，很多新的服务不支持从GR导入加星标文章，或者虽然有该功能却有各种问题，为了最大化历史数据的安全，我们可以通过导出的 json 文件将加星标文章导入 Evernote ，具体方法参考 &lt;a href="http://www.joshuazhang.net/posts/2013/Apr/export-googlereader-starreditem-to-evernote.html"&gt;导出Google Reader加星条目到Evernote&lt;/a&gt; 。&lt;/p&gt;</summary><category term="GoogleReader"></category></entry><entry><title>博客图床规划</title><link href="http://www.joshuazhang.net/posts/2013/blog-image-hosting-plan.html" rel="alternate"></link><updated>2013-04-28T23:55:00+08:00</updated><author><name>Joshz</name></author><id>tag:www.joshuazhang.net,2013-04-28:posts/2013/blog-image-hosting-plan.html</id><summary type="html">&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;要点&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;方案&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_3"&gt;不分家&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_4"&gt;第三方图床托管（不绑定域名）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_5"&gt;第三方托管（绑定域名）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_6"&gt;自建分离图床&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_7"&gt;结语&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;从开始折腾WordPress到切换为静态网站，我就一直在纠结图片编辑和保存的问题。这包括两个方面：一是保持编辑文章时的流畅度，尤其是需要插入大量图片时；二是规划一个扩展性好的图片URL和对应的物理地址。第一个问题主要涉及到文章编辑，这方面Windows Live Writer最符合我的需求，但可惜它不能满足我其它的需求，在我的另一篇文章 &lt;a href="http://www.joshuazhang.net/posts/2013/Jan/wp-edit-publish-plan.html"&gt;WordPress文章编辑发布方案&lt;/a&gt; 中有所阐述，这里我不多说了。第二个问题其实就是规划图床(虽然说是图床，但是其实也包括了附件、CSS、JS等文件)的问题，是本文探讨的中心。&lt;/p&gt;
&lt;h2 id="_1"&gt;要点&lt;/h2&gt;
&lt;p&gt;在读图时代，单图胜万言实在是每个博客作者都应该牢记在心的金玉良言，实际上其它文章类别也是如此。不过，博客图片的成本可要远远高于文字（创作成本、流量空间成本、管理成本等）。我把博客图床规划时需要考虑的问题总结如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数据安全性。对一个博客而言，数据的重要性是不言而喻的，如果图片随时可能丢失或损坏，没有人可以睡得安稳。对于第三方服务我们还是应该采取保守策略，毕竟连Google都不再是初恋时的Google了。&lt;/li&gt;
&lt;li&gt;备份成本。如果无法保证数据时刻处于安全的状态，那么只能自己勤快地手工备份了，如果有高度自动化的备份流程可以省不少心。&lt;/li&gt;
&lt;li&gt;流量、空间等资源限制。大量的图片托管在一个可靠的服务器上是省心但是伤钱的事情，不是高帅富就只能用其它方案逆袭。&lt;/li&gt;
&lt;li&gt;可迁移性。写一个博客可以折腾的事多了去了（实际上这也是乐趣之一），包括域名、空间、博客引擎、服务器环境等等，总不能每次都去手动改URL吧。&lt;/li&gt;
&lt;li&gt;可扩展性。博客如果壮大了，就会需要一些新的功能，比如防盗链、图片压缩等，其实也是不得已而为之。这时候能够统一处理所有图片无疑是很方便的。&lt;/li&gt;
&lt;li&gt;访问速度。考虑到我们在网速上无法与国际接轨，国外优秀的服务往往会因为这点而处于劣势。&lt;/li&gt;
&lt;li&gt;局域网环境。如果你不知道我在说什么，那我就给你两个关键词：备案、长城。如果你一眼就看懂了，那就在心里默念一个字“凸”吧！&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_2"&gt;方案&lt;/h2&gt;
&lt;p&gt;以下我将详细列举比较各种常见方案，由于对于不同的人而言优缺点可能是完全相反的，所以请读者注意这些观点仅供参考。&lt;/p&gt;
&lt;h3 id="_3"&gt;不分家&lt;/h3&gt;
&lt;p&gt;即采用博客引擎的默认设置，对于WordPress而言是自动上传到upload文件夹，对多数静态博客而言是使用相对路径访问图片资源，整站生成时会复制到指定目录。这种情况下图片的URL是很规范的，基本上是&lt;code&gt;http://domainname.com/upload or static/xxx.jpg&lt;/code&gt;的形式，在编辑文章时也很方便，但是它把程序和图片绑定在了一起，如果迁移，两者必须保持位置关系，否则就需要修改文章内的引用地址（WordPress可以使用SQL语句，静态博客需要&lt;code&gt;sed&lt;/code&gt;和正则表达式进行转换。）简而言之，该方案适合不折腾、稳定经营博客的用户。&lt;/p&gt;
&lt;h3 id="_4"&gt;第三方图床托管（不绑定域名）&lt;/h3&gt;
&lt;p&gt;虽然免费主机现在一抓一大把，但是大空间大流量稳定又省钱的实在打着灯笼也难找，因此把图片分离出去一直都有着很稳定的市场需求，有需求就有hack，在这个领域网民们确实展示除了他们非凡的智慧。简单想想就可以列出很多：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;图片托管商：Picasa、Photobucket、flickr之流&lt;/li&gt;
&lt;li&gt;各种网盘外链，比如Dropbox&lt;/li&gt;
&lt;li&gt;各类博客、微博发布平台外链&lt;/li&gt;
&lt;li&gt;Skydrive、Google doc外链（需繁琐地寻找地址）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;正规的内容管理网站往往会在用无规则的字串掩盖图片的真实地址，甚至改变文件名，不仅仅在文章中看起来丑陋，而且不利于编辑和长期的统一管理；更大的隐患是一旦托管商关闭服务，那么这些老图片都将变成刺眼的红叉，尤其是很少有托管商提供方便的备份导出方法，即便你导出了，那么地址又怎么改呢？基于这些理由，我个人很不喜欢这种方式。&lt;/p&gt;
&lt;h3 id="_5"&gt;第三方托管（绑定域名）&lt;/h3&gt;
&lt;p&gt;与第二类方案有区别的地方在于，虽然仍然是第三方托管，但是由于可以绑定域名，所以链接地址得到了规范，而且往往还有成熟的备份策略，主要有这么几种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gh-pages等社交编程类服务托管&lt;/li&gt;
&lt;li&gt;各类云计算平台：Heroku、OpenShift、GAE、SAE&lt;/li&gt;
&lt;li&gt;Sourceforge（特殊，类似虚拟主机）&lt;/li&gt;
&lt;li&gt;收费云存储平台：又拍、阿里OSS、华为直链Google Cloud Storage、Amazon S3&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本来Dropbox的外链可以绑定域名的，但是由于新的规则中外链地址加入了随机字符，绑定域名已经意义不大，因此放到了第二类方案中。&lt;/p&gt;
&lt;p&gt;对前三种方法，我想说的是使用者应当感谢开源世界为整个人类的信息交流作出的贡献，如果有能力，你可以贡献自己的代码，如果没有，你也应该常怀感恩之心，毕竟，免费不代表没有价值，甚至有它还有不一般的价值。第四种云存储方案近来十分流行，应该是大势所趋。对我而言，国外两个巨头提供的虽然价格高高在上（也有免费配额），但是仍然十分诱人；至于国内的，备案两个字就让我完全死心了。&lt;/p&gt;
&lt;p&gt;截至这篇文章完成，我采取的正是gh-pages托管的方式，但是正如我所言，这种只索取不付出的行为会对奉献者产生极大的伤害，因此，寻找更可持续的方式是我现在面临的问题。&lt;/p&gt;
&lt;h3 id="_6"&gt;自建分离图床&lt;/h3&gt;
&lt;p&gt;如果想要获得最完全最自由的控制，自建分离图床就是终极的解决方案，当然它的代价就是高昂的技术门槛和管理成本、经济成本。具体而言，你还是可以选择喜欢的方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;博客与图片“同床异梦”。虽然在同一个空间下，但是图片绑定到&lt;code&gt;img.domian.com&lt;/code&gt;这样的二级子域名下。&lt;/li&gt;
&lt;li&gt;博客与图片“分而治之”。这就意味着你需要两个空间，由于两者的文件形式不同，因此管理和备份的方式也不同。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这种方案的灵活还体现在你可以自由地选择空间，由于数据库（或者静态网页）体积流量都小，而图片等体积大、流量多，因此可以分别选择不同类型的空间Hosting，甚至是免费空间（只要备份做得到位！）。不同“空间”可以获取的权限不同（ftp、ssh、root），这种差异决定了上传和备份的方式也不相同，因此也可以说这种方式是最折腾人的。&lt;/p&gt;
&lt;h2 id="_7"&gt;结语&lt;/h2&gt;
&lt;p&gt;不同的人对于技术的理解、对于博客的追求乃至经济、时间、精力都不相同，因此不能用一套标准来衡量所有的方案，但幸运的是我们还有这很多选择，虽然其中一部分是在恶劣的环境下的产物。用什么方式也许不重要，重要的是我们的付出转化为了一段段文字在这个世界的众多黑暗角落里以0和1的形式奔腾着，它们才是我们的财富。&lt;/p&gt;</summary><category term="Blog"></category><category term=""></category></entry><entry><title>导出Google Reader加星条目到Evernote</title><link href="http://www.joshuazhang.net/posts/2013/export-googlereader-starreditem-to-evernote.html" rel="alternate"></link><updated>2013-04-18T19:13:00+08:00</updated><author><name>Joshz</name></author><id>tag:www.joshuazhang.net,2013-04-18:posts/2013/export-googlereader-starreditem-to-evernote.html</id><summary type="html">&lt;p&gt;Google Reader即将离我们而去，这个决定目前看来没有挽回的可能。我个人对Google的服务也很依赖，Google Reader更是常驻在书签栏，不过与其把力气花在谴责Google的作为，不如寻找更好的替代品和抓紧时间备份积累的订阅源和文章。目前离7月1日尚早，其它在线阅读器还有很长的时间打磨产品，所以替代品的筛选还不急于一时。倒是收藏的文章（加星标的条目）怎么导出似乎没有引起大家的关注，我把自己搜索整理的一些导出方案记录下来并作个比较（虽然没有一一测试），希望我的判断能有些参考价值。&lt;/p&gt;
&lt;h2 id="_1"&gt;导出方案思路&lt;/h2&gt;
&lt;p&gt;目前网上可以搜集到的方案有这么几种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.vsharing.com/ligongzi/A1472320.html"&gt;Google Reader的条目转发&lt;/a&gt;。手工转发当然是很蛋疼的，配合ifttt转发对已经加上星标的又没作用，需要更自动化的工具。&lt;/li&gt;
&lt;li&gt;&lt;a href="http://m.blog.csdn.net/blog/chief1985/6689805"&gt;基于html页面脚本或AHK脚本&lt;/a&gt;。这种方法大多是用脚本刷新页面直接打印为PDF，显然处理过程不怎么“漂亮”，而且输出也丢失了扩展性。&lt;/li&gt;
&lt;li&gt;基于第三方服务。目前似乎只有&lt;a href="http://blog.wiz.cn/google-reader.html"&gt;为知&lt;/a&gt;可以方便快捷地下载加星标的文章，但程序好像也不怎么给力。feedly貌似也可以直接导入加星标条目。&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.36kr.com/p/201886.html"&gt;RSS&lt;/a&gt;导出。这种方式貌似可以导出订阅源的所有条目，即便该博客已经不存在了。。。这种方法适合导出一个订阅源的所有文章，但缺点还是自动化程度太低。&lt;/li&gt;
&lt;li&gt;基于GoogleTakeout的导出数据。虽然关闭了Reader，但是Google对用户还是尽到了自己的责任，提供了一个强大而完备的备份工具，只不过导出的是比较另类的&lt;code&gt;.json&lt;/code&gt;文件。对它们做进一步处理可以得到组织良好的html文件。&lt;ol&gt;
&lt;li&gt;&lt;a href="http://mescoda.com/2011/12/gr2evernote/"&gt;GR2Evernote — 将Google Reader的分享内容导入Evernote&lt;/a&gt; ，&lt;a href="http://blog.sina.com.cn/s/blog_4afc0d8201017ah3.html"&gt;导出和备份google阅读器喜欢星标评论等历史内容到evernote或者wiz&lt;/a&gt; （未测试）&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.appinn.com/convertjson/"&gt;ConvertJSON – 转换 Google Reader 导出数据为网页&lt;/a&gt; （未测试）&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我个人更喜欢最后一种思路，因为Google提供的备份文件组织良好，而且保留了重要的由用户操作过的文档数据（加星、分享等）而非全部备份文档数据，这使得导出的数据不会很大同时保留住了精华。这里我要推荐一个python脚本&lt;code&gt;export_gr2evernote&lt;/code&gt;，它的作用是处理&lt;code&gt;json&lt;/code&gt;文件得到Evernote自家的笔记本格式&lt;code&gt;.enex&lt;/code&gt;（也可以得到html格式），这样就可以导入到Evernote中，而Evernote虽小，似乎比Google要有良心一些^-^。&lt;/p&gt;
&lt;h2 id="export_gr2evernote"&gt;export_gr2evernote&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/kerchen/export_gr2evernote"&gt;@Github&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;目前该项目仍然处在改进中，现在已经有了三种导入处理方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;export2HTMLFiles&lt;/code&gt;，每篇文章都输出为单独的html文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;export2enex&lt;/code&gt;，导出为&lt;code&gt;enex&lt;/code&gt;文件，所有转换都在本地完成，对&lt;code&gt;json&lt;/code&gt;文件大小无限制。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;export_gr2evernote&lt;/code&gt;，利用邮件发送功能导入Evernote，脚本不会进行任何的格式优化，所以在Evernote中显示的效果可能很丑陋，不推荐。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;作者本人推荐用前两种方式之一。从我个人测试的情况来看，导入的&lt;code&gt;enex&lt;/code&gt;笔记完全保存了GR中文章的样式，图片、视频都能正常显示和观看，最重要的是整个流程十分简单快捷。&lt;/p&gt;
&lt;p&gt;处理流程（以Windows下&lt;code&gt;export2enex&lt;/code&gt;为例）：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先确保系统安装了python&lt;/li&gt;
&lt;li&gt;用GoogleTakeout导出Reader数据，下载压缩包解压。&lt;/li&gt;
&lt;li&gt;将脚本丢到解压目录，&lt;code&gt;Win+r cmd &amp;lt;RET&amp;gt;&lt;/code&gt;运行Dos窗口， &lt;code&gt;cd&lt;/code&gt;到该目录，运行&lt;code&gt;export2enex.py starred.json &amp;gt; starred.enex&lt;/code&gt;，很快目录下就会出现&lt;code&gt;starred.enex&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Evernote导入&lt;code&gt;starred.enex&lt;/code&gt;文件，注意选择&lt;strong&gt;本地笔记本&lt;/strong&gt;，尤其是文章数很多的情况。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;export2enex.py&lt;/code&gt;这个脚本有个小bug，就是对文章的链接url中的&lt;code&gt;&amp;amp;&lt;/code&gt;字符处理不当（应该转换为&lt;code&gt;&amp;amp;amp;&lt;/code&gt;的形式），导致导出的&lt;code&gt;enex&lt;/code&gt;文件无法被正确导入到Evernote，需要加入如下代码到合适位置：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;amp;&amp;#39;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;msg_url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;msg_url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;msg_url&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;amp;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;amp;amp;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Google Reader"></category><category term="Evernote"></category></entry><entry><title>El-get——emacs包管理利器</title><link href="http://www.joshuazhang.net/posts/2013/el-get-intro.html" rel="alternate"></link><updated>2013-04-07T15:38:00+08:00</updated><author><name>Joshz</name></author><id>tag:www.joshuazhang.net,2013-04-07:posts/2013/el-get-intro.html</id><summary type="html">&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#el-get-vs-elpa"&gt;El-get vs ELPA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#el-get"&gt;安装el-get&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#el-get_1"&gt;配置el-get&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#github"&gt;Github同步&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_1"&gt;参考文章&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="el-get-vs-elpa"&gt;El-get vs ELPA&lt;/h2&gt;
&lt;p&gt;Emacs24已经集成了&lt;code&gt;package.el&lt;/code&gt;，可以安装多个源下的宏包。不过El-get宣称支持多种安装方式，ELPA方法只是其中一种。从我使用的情况来看，el-get似乎速度更快。另外，el-get安装的包不再需要手动&lt;code&gt;(require 'somepackage)&lt;/code&gt;，它会自动管理所有安装包的加载和初始化，当然配置还是需要的，不过这已经方便不少了。我个人ELPA用得较少，就不比较了，有时间再把两者比较一下。&lt;/p&gt;
&lt;h2 id="el-get"&gt;安装el-get&lt;/h2&gt;
&lt;p&gt;el-get现在处于活跃的开发阶段，因此推荐使用更新维护更活跃的&lt;code&gt;master branch&lt;/code&gt;，安装只需要把如下命令拷贝到emacs的&lt;code&gt;*scrach*&lt;/code&gt;buffer，然后&lt;code&gt;C-j&lt;/code&gt;或者&lt;code&gt;M-x eval-print-last-exp&lt;/code&gt;运行，el-get就会自动下载安装了。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c1"&gt;;; So the idea is that you copy/paste this code into your *scratch* buffer,&lt;/span&gt;
&lt;span class="c1"&gt;;; hit C-j, and you have a working developper edition of el-get.&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;url-retrieve&lt;/span&gt;
 &lt;span class="s"&gt;&amp;quot;https://raw.github.com/dimitri/el-get/master/el-get-install.el&amp;quot;&lt;/span&gt;
 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;el-get-master-branch&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;goto-char&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;point-max&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;eval-print-last-sexp&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;安装完毕，如果要手动安装package，可以&lt;code&gt;M-x el-get-install RET packagename&lt;/code&gt;，喝口茶的功夫估计就好啦。&lt;/p&gt;
&lt;h2 id="el-get_1"&gt;配置el-get&lt;/h2&gt;
&lt;p&gt;将下列代码加入配置文件，emacs每次启动时就会检查el-get是否已经安装，未安装则自动下载安装。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;add-to-list&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;load-path&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;~/.emacs.d/el-get/el-get&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;unless&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;require&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;el-get&lt;/span&gt; &lt;span class="nv"&gt;nil&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;noerror&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;with-current-buffer&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;url-retrieve-synchronously&lt;/span&gt;
       &lt;span class="s"&gt;&amp;quot;https://raw.github.com/dimitri/el-get/master/el-get-install.el&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;el-get-master-branch&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;goto-char&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;point-max&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;eval-print-last-sexp&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;el-get&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;sync&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;想要自动检测并安装需要的宏包，可以使用下面这段代码：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;my-el-get-packages&lt;/span&gt;
&lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nv"&gt;el-get&lt;/span&gt;
    &lt;span class="nv"&gt;auto-complete&lt;/span&gt;
    &lt;span class="nv"&gt;yasnippet&lt;/span&gt;
    &lt;span class="nv"&gt;auctex&lt;/span&gt;
    &lt;span class="nv"&gt;emacs-w3m&lt;/span&gt;
    &lt;span class="nv"&gt;markdown-mode&lt;/span&gt;
    &lt;span class="nv"&gt;color-theme&lt;/span&gt;
    &lt;span class="c1"&gt;;; Any package you like))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;el-get&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;sync&lt;/span&gt; &lt;span class="nv"&gt;my-el-get-packages&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="github"&gt;Github同步&lt;/h2&gt;
&lt;p&gt;如果想要在不同电脑上共享同样的emacs配置，那么你可以选择dropbox或者更开放的github同步。为了便于git的管理，需要把所有配置文件都放到&lt;code&gt;.emacs.d&lt;/code&gt;目录下，这样只需要&lt;code&gt;ln -s&lt;/code&gt;把该目录链接到用户主目录即可。如果你使用&lt;code&gt;.emacs&lt;/code&gt;配置文件，那么可以把它原封不动地迁徙一下即可：&lt;code&gt;mv .emacs .emacs.d/init.el&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id="_1"&gt;参考文章&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/dimitri/el-get"&gt;el-get@Github&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;&lt;a href="http://batsov.com/articles/2012/02/19/package-management-in-emacs-the-good-the-bad-and-the-ugly/"&gt;Package Management in Emacs: The Good, the Bad and the Ugly&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://emacser.com/el-get.htm"&gt;GNU Emacs的终极扩展管理工具 — el-get&lt;/a&gt; &lt;/p&gt;</summary><category term="el-get"></category><category term="Emacs"></category></entry><entry><title>WordPress文章编辑发布方案</title><link href="http://www.joshuazhang.net/posts/2013/wp-edit-publish-plan.html" rel="alternate"></link><updated>2013-01-04T00:00:00+08:00</updated><author><name>Joshz</name></author><id>tag:www.joshuazhang.net,2013-01-04:posts/2013/wp-edit-publish-plan.html</id><summary type="html">&lt;p&gt;我已经不再使用WP作为博客平台，其中一个原因就是因为找不到一个适合自己的编辑发布工具链（也许是我太挑剔）。如果你也和我一样对这方面很不满意的话,想要了解其它的方案，这篇文章也许会有帮助。首先要说明的是编辑和发布是两个阶段，如果再详细点还应该包括修改阶段，下面的一些发布流程往往只能照顾到某一个方面，而在另一个方面就相形见绌，总有这样那样的瑕疵。基本上，WordPress的编辑发布方案有这么几大类：&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;后台发布&lt;/h2&gt;
&lt;p&gt;这是默认的，也是便利性、兼容性最好的方案。但是它最大的缺点就在于一个字：慢。这个慢有两个方面，一是后台太笨重，如果你空间本来就不快（比如国外的空间），那加载后台都会等很久；二是WYSIWYG的编辑方式，如果你要搞长篇大论，图文并茂的话，上传图片、预览这些操作都是费事费力的。当然改进的方法也有：使用WP前台编辑插件（什么名字我忘了）、尽量不预览（对html熟悉程度要高）。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;编辑器终端&lt;/h2&gt;
&lt;p&gt;包括两大类：专用的和通用的。&lt;/p&gt;
&lt;p&gt;专用的就有大名鼎鼎的WLW，这应该是许多人坚守Windows平台的原因之一吧。其它如qumana、thingamablog等，虽然可用，但是功能不完善，体验也不好。特别值得一提的是浏览器插件 &lt;a class="reference external" href="https://addons.mozilla.org/en-us/firefox/addon/scribefire-next/"&gt;ScribeFireNext&lt;/a&gt; ，比起WLW也未逊色多少，如果要跨平台的话可以一试。Linux下可以尝试 &lt;a class="reference external" href="http://paranimage.com/6-under-linux-blog-editor/"&gt;这些&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;通用的也很多，这里又分两类：WYSIWYG和代码编辑器。所见即所得的比如M$ Office中的 &lt;a class="reference external" href="http://www.dongbinbin.com/2012/07/wordfabuboke/"&gt;Word编辑器&lt;/a&gt; 就可以作为发布终端，&lt;a class="reference external" href="http://hi.baidu.com/yumi44444/item/52e203d0c0f5d2e0b3f77789"&gt;OneNote&lt;/a&gt; 也是选择之一。代码编辑器其实就是指VIM和emacs啦。用这两款编辑器发布文章往往可以使用一些轻量级标记语言，从而简化写作过程，但是修改过程可能很让人恼火。编辑器之神和神之编辑器都有相应的WordPress插件如vimpress、vimrepress和Weblogger Mode等，请读者自行搜索。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;云服务中转&lt;/h2&gt;
&lt;p&gt;这一类方案也有很多，可以举出许多例子：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;邮箱转发&lt;/li&gt;
&lt;li&gt;Google docs发布&lt;/li&gt;
&lt;li&gt;云笔记发布&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2&gt;命令行工具&lt;/h2&gt;
&lt;p&gt;这里强调的实际是发布工具。对于命令行geek而言，真正让他们恋恋不舍的其实是vim，emacs之流的编辑器神器加上Markdown这样的快速语法配合得到的强大的文章编辑工作流，至于发布，除了插件，第三方工具也是一个选择，比如 &lt;a class="reference external" href="http://mooninsky.net/history/?p=271"&gt;基于Perl的命令行WordPress客户端&lt;/a&gt; 。当然还有很多此类的工具，它们都基于 &lt;a class="reference external" href="http://www.ibm.com/developerworks/cn/xml/x-metablog/"&gt;标准的API&lt;/a&gt; ，如果你喜欢，甚至可以自己编写一个。&lt;/p&gt;
&lt;p&gt;前两种方案有诸多限制，因此并不推荐。第三种方案我实践了一段时间，主要用 &lt;a class="reference external" href="http://note.sdo.com/register?ac=634782146519602937"&gt;麦库&lt;/a&gt; 作为编辑终端，所有文章都存在网上，成文后在麦库发布然后复制粘贴到WP博客上，虽然发布过程麻烦，但是胜在编辑是在速度很快的云端，多地点写作的感觉很好。还有一个缺点是图片需要外链到麦库，太依赖此服务。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h2&gt;我的选择&lt;/h2&gt;
&lt;p&gt;应该说选择还是很多的，不过我的要求更多，列表如下：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;网络同步。因为我需要在不同地点都能够编辑文章，如果能够云端编辑更好，省去了同步的时间&lt;/li&gt;
&lt;li&gt;较高的编辑效率。写文章的时候大量的格式修改、插入图片的操作很另人沮丧，编辑效率太低很影响写作的流畅度，WYSIWYG的方式尤其如此。&lt;/li&gt;
&lt;li&gt;快速的响应，这是我讨厌后台发布文章的主因。&lt;/li&gt;
&lt;li&gt;跨平台，windows和linux我都在使用，能够统一编辑当然是最好的。&lt;/li&gt;
&lt;li&gt;延时发布机制。好的文章往往并非一蹴而就的，构思、动笔、不断的修改和打磨是正常的，这就需要草稿能够很好地保存且易于修改。&lt;/li&gt;
&lt;li&gt;图片发布转存。文章里的图片、附件应当能够正确地上传到指定的地址且url可以自由定制。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基本上我的要求难以同时得到满足，所以有这么一个折腾的理由，我也就顺理成章地转到了Pelican上去了。静态博客当然也有它的缺点，不过暂时而言我对它的喜爱还是多一点的。&lt;/p&gt;
&lt;/div&gt;
</summary><category term="WordPress"></category></entry><entry><title>cygwin安装jekyll</title><link href="http://www.joshuazhang.net/posts/2012/cygwin-install-jekyll.html" rel="alternate"></link><updated>2012-09-24T00:00:00+08:00</updated><author><name>Joshz</name></author><id>tag:www.joshuazhang.net,2012-09-24:posts/2012/cygwin-install-jekyll.html</id><summary type="html">&lt;h2 id="ruby"&gt;卸载已安装的ruby&lt;/h2&gt;
&lt;p&gt;用对应的包管理器卸载
如果是rvm安装的，直接删除目录&lt;code&gt;~/.rvm&lt;/code&gt;，然后删除&lt;code&gt;.zshrc&lt;/code&gt;和&lt;code&gt;.zlogin&lt;/code&gt;文件，去掉&lt;code&gt;.profile&lt;/code&gt;和&lt;code&gt;.bash_profile&lt;/code&gt;中关于rvm的语句即可。&lt;/p&gt;
&lt;h2 id="rvm"&gt;安装rvm&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://rvm.io/rvm/install/"&gt;安装指南&lt;/a&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;curl -L https://get.rvm.io &lt;span class="p"&gt;|&lt;/span&gt; bash -s stable --ruby
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;检测rvm安装&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nb"&gt;type &lt;/span&gt;rvm &lt;span class="p"&gt;|&lt;/span&gt; head -n 1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;此时会显示&lt;code&gt;rvm:not found&lt;/code&gt;，不用紧，还需要一步：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nb"&gt;source&lt;/span&gt; ~/.rvm/scripts/rvm
&lt;span class="nb"&gt;type &lt;/span&gt;rvm &lt;span class="p"&gt;|&lt;/span&gt; head -n 1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;现在显示&lt;code&gt;rvm is a function&lt;/code&gt;，说明rvm安装成功。
查看是否还有依赖问题：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;rvm requirements
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="ruby_1"&gt;管理ruby环境&lt;/h2&gt;
&lt;p&gt;下面这几步其实不必要了，只是展示一下安装的过程，你也可以安装其它的ruby版本。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;rvm list known
rvm install 1.9.3
rvm use 1.9.3 --default
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;查看安装的版本号和路径&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;ruby -v
gem -v
which ruby
which gem
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="jekyll"&gt;安装jekyll&lt;/h2&gt;
&lt;p&gt;用gem安装：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;gem update --system
gem list
gem install jekyll
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果出现&lt;code&gt;spawn.h&lt;/code&gt;的错误，这是由于&lt;code&gt;posix-spawn&lt;/code&gt;的bug引起的，需要自己编译安装：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;gem install rake-compiler -v 0.7.6
git clone git://github.com/rtomayko/posix-spawn.git
&lt;span class="nb"&gt;cd &lt;/span&gt;posix-spawn
rake gem
gem install pkg/posix-spawn-0.3.6
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;再&lt;code&gt;gem install jekyll&lt;/code&gt;就没问题啦。&lt;/p&gt;
&lt;h2 id="_1"&gt;参考页面&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://matt.scharley.me/2012/03/10/windows-cygwin-and-jekyll.html"&gt;Windows,Cygwin and Jekyll&lt;/a&gt;&lt;/p&gt;</summary><category term="cygwin"></category><category term="jekyll"></category></entry><entry><title>wordpress数据库优化记录</title><link href="http://www.joshuazhang.net/posts/2012/wp-database-optimization.html" rel="alternate"></link><updated>2012-08-30T20:02:00+08:00</updated><author><name>Joshz</name></author><id>tag:www.joshuazhang.net,2012-08-30:posts/2012/wp-database-optimization.html</id><summary type="html">&lt;p&gt;前段时间发现备份的数据库大小日渐庞大，对一个几乎长草的博客而言实在很诡异，所以抽空进行了一次后台大扫除。这里把基本的流程记录下来，供对数据库操作没有经验的朋友参考。&lt;/p&gt;
&lt;p&gt;基本流程如下：&lt;/p&gt;
&lt;p&gt;1、备份。做任何数据库操作前，做一个临时备份都是必要的。使用phpmyadmin按默认设置导出sql文件下载到本地即可。&lt;/p&gt;
&lt;p&gt;2、删除不必要的插件。不必要的插件应当越少越好，尤其是会写入数据库或者查询数据库的插件。比如我之前使用过的&lt;a class="reference external" href="http://www.6psp.cn/20100917/statpresscn%E6%8F%92%E4%BB%B6%E9%80%A0%E6%88%90%E5%8D%9A%E5%AE%A2%E9%80%9F%E5%BA%A6%E5%8F%98%E6%85%A2%EF%BC%8C%E8%B5%B6%E5%BF%AB%E5%88%A0%E9%99%A4.html"&gt;statpresscn&lt;/a&gt;，这个插件会在数据库中建立一个庞大的wp_statpresscn表，虽然没有前台查询，不过它造成的数据库冗余带来的坏处可远远大于统计功能带来的便利，所以还是删了吧。&lt;/p&gt;
&lt;p&gt;3、删除垃圾数据表。功能比较复杂的插件可能会在数据库中建立新表，删除插件一般不会把这些表顺带删除，所以手动排查垃圾数据表也是必要的。为了防止误删，请一定对照WP
Codex的&lt;a class="reference external" href="http://codex.wordpress.org/zh-cn:%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8F%8F%E8%BF%B0"&gt;数据库描述&lt;/a&gt;进行修改。&lt;/p&gt;
&lt;p&gt;删除akismet垃圾数据。关于akismet如何产生这些数据可以参考&lt;a class="reference external" href="http://www.solagirl.net/wp-commentmeta-slowing-down-your-blog.html"&gt;wp_commentmeta是否正在拖慢你的blog&lt;/a&gt;。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;delete&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;wp_commentmeta&lt;/span&gt; &lt;span class="k"&gt;where&lt;/span&gt; &lt;span class="n"&gt;meta_key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;akismet_as_submitted&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="n"&gt;meta_key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;akismet_history&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="n"&gt;meta_key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;akismet_rechecking&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="n"&gt;meta_key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;akismet_result&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="n"&gt;meta_key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;akismet_user&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="n"&gt;meta_key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;akismet_user_result&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;wp_options数据表清理。主要有两部分垃圾数据：其一、已删除的插件选项。大部分插件都不提供完全的删除功能，主要就是针对数据表而言。由于不清楚数据和插件的对应关系，最好不要盲目删除，如果一定要清理，可以尝试用&lt;a class="reference external" href="http://www.mittineague.com/dev/co.php"&gt;clean
options&lt;/a&gt;插件，注意备份！其二、没用的RSS Feed
Cache。以“_transient”开头的数据都是因为用了RSS小工具产生的，作用不大，体积却不小。可以用下面的SQL语句删除：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;DELETE&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;wp_options&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;option_name&lt;/span&gt; &lt;span class="n"&gt;REGEXP&lt;/span&gt; &lt;span class="err"&gt;&amp;quot;&lt;/span&gt;&lt;span class="n"&gt;_transient_&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;4、优化数据表。最后还要利用phpmyadmin执行优化数据表，体积还会有所减小。&lt;/p&gt;
</summary><category term="WordPress"></category><category term="优化"></category><category term="数据库"></category></entry><entry><title>《MATLAB M语言高级编程》读书笔记</title><link href="http://www.joshuazhang.net/posts/2012/matlab-note.html" rel="alternate"></link><updated>2012-07-30T21:04:00+08:00</updated><author><name>Joshz</name></author><id>tag:www.joshuazhang.net,2012-07-30:posts/2012/matlab-note.html</id><summary type="html">&lt;p&gt;第一章：M语言基础&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Matlab是解释型语言，不同于C语言这样的编译型语言，不过Matlab现在也可以编译。&lt;/li&gt;
&lt;li&gt;whos命令查看变量&lt;/li&gt;
&lt;li&gt;给变量赋值之前，不需要定义其类型。Matlab会&lt;strong&gt;自动决定&lt;/strong&gt;变量类型，并分配内存空间。&lt;/li&gt;
&lt;li&gt;Matlab支持自动扩维(在&lt;strong&gt;某些操作&lt;/strong&gt;下！比如两个不同维的矩阵相加就不会自动扩维，而会报错)，所以几乎所有变量都可以理解为矩阵（对于结构数组、元胞数组最好不要当做矩阵来理解）&lt;/li&gt;
&lt;li&gt;Matlab变量按列存储，C/C++按行存储。Matlab绝对下标索引是按从上到下，从左到右的顺序进行的，初始值为1。这个特性继承自FORTRAN。&lt;/li&gt;
&lt;li&gt;矩阵输入：中括号、逗号、分号、空格的区别。a=[1:5];这样的语句就会产生warning。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;矩阵索引示意图&lt;/p&gt;
&lt;img alt="matrix index" class="align-center" src="/static/img/wp/20120702204224.png" /&gt;
&lt;p&gt;这一张图基本就讲清楚了所有的情况，注意A([9 14;10
15])这样的索引方式。想一想A([8 12;10 11])是什么，A([8:10;10:12])又是什么？
进一步想想这个程序的结果是什么：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;ones&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),:)&lt;/span&gt;
&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;=[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(:,&lt;/span&gt;&lt;span class="nb"&gt;ones&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;=[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;mod&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;\*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nb"&gt;mod&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)),:)&lt;/span&gt;
&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;(:,&lt;/span&gt;&lt;span class="nb"&gt;mod&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;\*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="nb"&gt;mod&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;求B、C用这种方法显得繁琐，用repmat更简洁，不过b、d的求法又很方便了。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;MATLAB的索引方式是继承自fortran语言，因为最初它就是用fortran写的。&lt;/li&gt;
&lt;li&gt;布尔运算：真返回逻辑值1，假返回逻辑值0。矩阵也可以进行布尔运算，返回逻辑数组。(试试看~2=?)&lt;/li&gt;
&lt;li&gt;形如A(B)的矩阵索引操作在B是数值矩阵和B是逻辑矩阵时是完全不同的。没怎么看懂。。。P18&lt;/li&gt;
&lt;li&gt;help matfun 基本的矩阵函数&lt;/li&gt;
&lt;li&gt;help ops Matlab的操作符&lt;/li&gt;
&lt;li&gt;加点运算和不加点运算的区别？&lt;/li&gt;
&lt;li&gt;大部分情况下加点的运算表示对矩阵元素分别进行运算，而不加点的运算则把矩阵作为整体来运算，转置运算是例外。可以理解成不加点运算是默认的矩阵运算，而加点运算为元素运算。&lt;/li&gt;
&lt;/ul&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="13%" /&gt;
&lt;col width="8%" /&gt;
&lt;col width="36%" /&gt;
&lt;col width="13%" /&gt;
&lt;col width="8%" /&gt;
&lt;col width="22%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;功能&lt;/th&gt;
&lt;th class="head"&gt;记号&lt;/th&gt;
&lt;th class="head"&gt;说明&lt;/th&gt;
&lt;th class="head"&gt;功能&lt;/th&gt;
&lt;th class="head"&gt;记号&lt;/th&gt;
&lt;th class="head"&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;乘&lt;/td&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;矩阵乘法&lt;/td&gt;
&lt;td&gt;数组乘&lt;/td&gt;
&lt;td&gt;.*&lt;/td&gt;
&lt;td&gt;对应元素相乘&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;左除&lt;/td&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;数组左除&lt;/td&gt;
&lt;td&gt;./&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;右除&lt;/td&gt;
&lt;td&gt;\&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;数组右除&lt;/td&gt;
&lt;td&gt;.\&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;幂&lt;/td&gt;
&lt;td&gt;^&lt;/td&gt;
&lt;td&gt;方阵幂运算&lt;/td&gt;
&lt;td&gt;数组幂&lt;/td&gt;
&lt;td&gt;.^&lt;/td&gt;
&lt;td&gt;矩阵元素求幂&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;共轭转置&lt;/td&gt;
&lt;td&gt;'&lt;/td&gt;
&lt;td&gt;共轭转置，除了转置外，还要求共轭&lt;/td&gt;
&lt;td&gt;转置&lt;/td&gt;
&lt;td&gt;.'&lt;/td&gt;
&lt;td&gt;矩阵转置，不求共轭&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;左除/和右除\什么区别？&lt;/li&gt;
&lt;li&gt;用help slash查看官方说法&lt;/li&gt;
&lt;li&gt;m文件包括两种：1、批处理脚本，2、函数M文件&lt;/li&gt;
&lt;li&gt;在M文件中包含子函数的方法？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Matlab函数文件格式：&lt;/p&gt;
&lt;img alt="matlab function" class="align-center" src="/static/img/wp/Image5.png" /&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;在线帮助部分可用help查询得到，H1 help line部分用lookfor命令查询得到。&lt;/li&gt;
&lt;li&gt;在线帮助不可出现空行，空行后面的内容不在作为在线帮助。&lt;/li&gt;
&lt;li&gt;Matlab函数文件名一般和函数名相同，如果不同，则以文件名为准。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输入参数可变的函数：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;输入参数可变的函数的最后一个输入参数一定要是 varargin。&lt;/li&gt;
&lt;li&gt;使用 nargin命令或者 length(varargin)来检测到底输入了多少个参数。&lt;/li&gt;
&lt;li&gt;使用元胞数组内容提取符{}来提取可变输入参数中的输入内容。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;输出参数可变的函数：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;输出参数可变的函数的最后一个输出参数一定要是 varargout。&lt;/li&gt;
&lt;li&gt;使用 nargout命令或者 length(varargout)来检测到底有了多少个输出参数。&lt;/li&gt;
&lt;li&gt;使用元胞数组内容提取符{}来对可变输出参数赋值。&lt;/li&gt;
&lt;/ol&gt;
</summary><category term="Matlab"></category></entry><entry><title>Linux外置硬盘加载方案</title><link href="http://www.joshuazhang.net/posts/2012/linux-usb-mount.html" rel="alternate"></link><updated>2012-07-17T16:20:00+08:00</updated><author><name>Joshz</name></author><id>tag:www.joshuazhang.net,2012-07-17:posts/2012/linux-usb-mount.html</id><summary type="html">&lt;p&gt;对于有大容量外置硬盘的Linuxer而言，开机自动加载外置硬盘当然是很舒服的事情，尤其是外置硬盘常年不挪窝的情况。许多Linux发行版都有usb自动加载程序，不过相对手工加载而言速度较慢，所以开机时让系统直接加载外置硬盘而不是搜索usb硬盘再添加会更好一些，这可以通过修改/etc/fstab文件来实现。这个文件语法还是比较简单的，看着其它分区的示例就差不多了，当然也可以详细地参考Arch的&lt;a class="reference external" href="https://wiki.archlinux.org/index.php/Fstab"&gt;fstab
wiki&lt;/a&gt;。简单地说就是现在/media目录下创建好要加载到的目标目录，然后在fstab中添加常连的外置硬盘mount条目即可。&lt;/p&gt;
&lt;p&gt;这个方案是我最开始采用的，没有太大问题，但是还不完美。主要是最近我的外置硬盘接口似乎有点松动，所以用段时间后会自动掉线，这时系统又会自动搜索加载，麻烦在于自动加载的目录和我所设的目录不一致了，这样所有对该硬盘下文件的操作就会“找不到目标”。典型的例子就是用播放器播放外置硬盘的歌曲，掉线重连后播放器就找不到曲目，只能又去手动加载，十分费劲。&lt;/p&gt;
&lt;p&gt;Linux下自动加载usb外置硬盘会mount到/media/$partition
label目录下（起码我在Arch和Linux
Mint下是如此），因此，你可以把手工设置的目录名称和外置硬盘分区的label修改成一致即可，这样就算掉线重连，文件位置不改变也就不会出现错误啦。想法是好的，不过可惜，如果系统检测到有同名的目录它就会创建一个带_的一个新目录作为挂载点，这条路也行不通。（也许可以修改哪里的设置或者权限可以达到这个目的？）&lt;/p&gt;
&lt;p&gt;目前只能不采用手动挂载而采用自动搜索挂载，这样其实也没太大的缺点，总比不断手动修改挂载点强。&lt;/p&gt;
&lt;p&gt;另外外置硬盘分区的label可以用Gparted修改，先卸载要修改的硬盘，然后右键修改label，再应用这些修改即可。修改成一个简短好识别的id，固定下来以后就不会再有诸如此类的麻烦了。&lt;/p&gt;
&lt;/p&gt;</summary><category term="linux"></category><category term="mount"></category><category term=""></category></entry><entry><title>用MATLAB分析Henon映射</title><link href="http://www.joshuazhang.net/posts/2012/henon-matlab-analysis.html" rel="alternate"></link><updated>2012-07-09T18:24:00+08:00</updated><author><name>Joshz</name></author><id>tag:www.joshuazhang.net,2012-07-09:posts/2012/henon-matlab-analysis.html</id><summary type="html">&lt;p&gt;Henon映射是动力系统研究中很常见的离散映射，因为它具有的混沌特性而闻名。映射方程如下：
\[\left\{\begin{array}\~x_{n+1}=y_n+1-a\times~x_n^2 \\ y_{n+1}=bx_n \\ \end{array} \right. \]&lt;/p&gt;
&lt;p&gt;不同的a、b参数下该映射具有不同的性质，可能出现混沌、断续或者收敛到周期轨道上不同的情况。取a=1.4，b=0.3时会产生著名的henon吸引子。&lt;/p&gt;
&lt;img alt="henon1" class="align-center" src="/static/img/wp/henon1.png" /&gt;
&lt;p&gt;Henon吸引子，横轴为x，纵轴为y，其实就是所有迭代的点产生的图案，形状比较怪异。&lt;/p&gt;
&lt;img alt="henon2" class="align-center" src="/static/img/wp/henon2.png" /&gt;
&lt;p&gt;b=0.3时的分岔图，不同a值下x可能在几个值间变化，也可能在许多值之间变化，即产生了混沌。顺便吐槽下Matlab生成的图片太不精细了，暂时还不知道用什么方法能提高图片细节。&lt;/p&gt;
&lt;p&gt;Matlab源代码：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;% By voidmous&amp;lt;voidmous@gmail.com&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;% Henon map analysis&lt;/span&gt;
&lt;span class="n"&gt;clear&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;clc&lt;/span&gt;
&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;zeros&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;zeros&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;
   &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)=&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;^&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)=&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;scatter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;x&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;y&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Henon Attractor&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.97&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;0.001&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;1.5&lt;/span&gt;
   &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;
      &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)=&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;^&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)=&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="k"&gt;end&lt;/span&gt;
   &lt;span class="n"&gt;scatter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nb"&gt;ones&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;black&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;filled&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="n"&gt;hold&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;bifurcation for a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;x&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;参考文献&lt;/p&gt;
&lt;p&gt;[1]Wikipedia contributors. &lt;a class="reference external" href="http://en.wikipedia.org/w/index.php?title=H%C3%A9non_map&amp;amp;oldid=474794740"&gt;Hénon map&lt;/a&gt;[J]. Wikipedia, the free
encyclopedia, Wikimedia Foundation, Inc., 2012.&lt;/p&gt;
</summary><category term="Henon"></category><category term="Matlab"></category><category term="分岔"></category><category term="吸引子"></category><category term="映射"></category><category term="混沌"></category></entry><entry><title>MS Word题注与交叉引用</title><link href="http://www.joshuazhang.net/posts/2012/MS-Word-label.html" rel="alternate"></link><updated>2012-07-05T19:51:00+08:00</updated><author><name>Joshz</name></author><id>tag:www.joshuazhang.net,2012-07-05:posts/2012/MS-Word-label.html</id><summary type="html">&lt;p&gt;MS Word作为微软的拳头产品，虽然乏善可陈，但是仍然稳坐国内市场头把交椅，就算是在高校，这种局面也好不了多少。最近用Word写了份简短的文档，没什么花哨的东西，就是些公式和交叉引用、参考文献啥的，还是要请出Google大神才搞定。中间关于域以及题注上的有些细节问题没有完全搞懂，看来还是要系统地看看Word教程（谁说Word易用的，不学能用吗？！）。&lt;/p&gt;
&lt;p&gt;关于公式多说两句，Word自带的公式编辑器3.0实在是太简单了，要输入空集符号都不行，要输复杂点的公式简直找虐。第三方的mathtype印象中比自带的显示效果还要差，虽然功能似乎强大点。Aurora是基于LaTeX的，输入公式确实快捷，效果也最好，但是担心会出现兼容性问题，转换成图片的话和mathtype一样都不够原生态。总之公式的美观、输入快捷和兼容性三者在Word上兼得。&lt;/p&gt;
&lt;p&gt;Zotero在Word内插入参考文献其实是添加了域代码，通过域来更新文献内容以及索引。所谓域，可以理解为一个变量寄存器，根据它在文档中所处的位置产生数据。比如第几张图，第几个表，这时就相当于一个计数器（其实LaTeX里面的Counter更好理解）。大部分域操作都可以手工操作完成，比较重要的快捷键有：F9
更新域；Ctrl+Shift+F9把域转化为文本（确定文章不会再修改时使用，注意备份，慎用！）&lt;/p&gt;
&lt;p&gt;Word里面的题注和LaTeX里面的label差不多，其实题注也就是为对象加上一个标签，要引用对象时就指定标签即可（想不通要专门设计个新名词来迷惑人干嘛）。选中对象右键可以添加题注，如下图所示，可以自己添加标签，题注一栏显示的就是该对象在当前状态下产生的题注。&lt;/p&gt;
&lt;img alt="a" src="/static/img/wp/201207052.png" /&gt;
&lt;p&gt;上图里的题注默认并非宋体，文章里显得不协调，可以在样式里修改题注的各种细节，如下图，注意可以为中文和西文分别修改字体。题注比较恶心的地方在于位置的摆放，如果对题注的位置进行了修改，很可能它前面的文字或者图片也会被当成题注的一部分而在引用的时候引起麻烦，目前还不清楚用什么方法来分隔。另外，一般添加题注完以后，对象前面都会自动加上一个小黑点，很恶心，可以在对象所在行选择段落属性，将换行与分页——分页里面的所有选项前的钩都去掉，黑点就会消失了。&lt;/p&gt;
&lt;img alt="b" src="/static/img/wp/201207053.png" /&gt;
&lt;p&gt;题注设定完成就可以进行引用，点插入——交叉引用，如下图：&lt;/p&gt;
&lt;img alt="c" src="/static/img/wp/201207054.png" /&gt;
&lt;p&gt;选择标签，在选择引用内容插入即可。很多情况下在标签和数字之间会产生一个空格，这是沿袭了英文里面的设定，中文就不适用，只能手动删除，没找到可以设置的地方。如果你不确定是不是有空格，请在Word选项——显示里面勾上显示所有格式标记，这样，空格就会用一个小黑点标示出来了。&lt;/p&gt;
&lt;p&gt;总结：Office产品号称易于使用，其实是在不要求高级功能的前提下，一旦要设计些功能，仍然要学习微软的一套设定，花费的时间不一定比LaTeX语言少。微软的自作聪明我就不说了，很多情况下光是修改默认的设置就很麻烦。&lt;/p&gt;
</summary><category term="MS Word"></category><category term="交叉引用"></category><category term="参考文献"></category><category term="域"></category><category term="题注"></category></entry><entry><title>利用Zotero为博文添加参考文献</title><link href="http://www.joshuazhang.net/posts/2012/zotero-bib-blog.html" rel="alternate"></link><updated>2012-06-29T19:15:00+08:00</updated><author><name>Joshz</name></author><id>tag:www.joshuazhang.net,2012-06-29:posts/2012/zotero-bib-blog.html</id><summary type="html">&lt;p&gt;对于技术类文章而言，添加必要的参考文献体现的是对他人劳动成果的尊重。即便你不会全文转载别人的文章而不标明出处，但是严格的说，学习了别人的方法或者观点也不能据为己有，标注参考文献就是向原创致敬的方法之一。目前而言，许多加了参考文献的文章都是怎么简单怎么来，没有个统一的格式，也不方便读者查阅。其实规范并不是没有，许多学术期刊对引用网页这样的媒体都有说明，我国&lt;a class="reference external" href="http://gradschool.ustc.edu.cn/ylb/material/xw/wdxz/19.pdf"&gt;参考文献标准&lt;/a&gt;也有说明。从我较短的使用过程来看，GB/T&amp;nbsp;7714-2005标准设计得比较简洁紧凑，适合中文、英文以及混排的情况，看上去比较舒服。&lt;/p&gt;
&lt;p&gt;收集、管理文献的工具我首推Zotero，主要就在于它和Firefox结合得很好，对国际国内各大学术期刊数据库都支持得不错，和Google
Scholar搭配堪称完美。关于Zotero的使用可以看这篇文章：《&lt;a class="reference external" href="http://blog.yesmryang.net/zotero-usage/"&gt;文献管理软件Zotero的一点使用感受&lt;/a&gt;》。&lt;/p&gt;
&lt;p&gt;利用Zotero的导出功能实际已经可以生成很好的参考文献了，不过美中不足的是导出的只是纯文本，没有任何格式化，所以读者仍然要自己手动去查找参考文献，这可不是我这样的懒人想干的事，于是干脆自己动手写了下面这个style，基本功能已经实现，在外观和功能上可能还有提升的空间。&lt;/p&gt;
&lt;p&gt;Blogit是我基于&lt;a class="reference external" href="http://www.zotero.org/styles/chinese-gb7714-2005-numeric"&gt;Chinese Std GB/T 7714-2005
(numeric)&lt;/a&gt;这个style文件，参考&lt;a class="reference external" href="http://www.zotero.org/styles/radiopaedia"&gt;radiopaedia&lt;/a&gt;鼓捣出来的一个结合体。一方面保留了国标的规范，同时加上了源网页和DOI（&lt;a class="reference external" href="http://dx.doi.org/"&gt;hdx.doi.org&lt;/a&gt;）或者ISBN（&lt;a class="reference external" href="http://www.worldcat.org/wcpa/isbn/"&gt;www.worldcat.org&lt;/a&gt;）的超链接，方便在网页上直接跳转查看，不用复制粘贴再搜索这么麻烦了。利用此style配合Zotero导出的代码包含超链接，可以直接粘贴到文章源代码上。&lt;/p&gt;
&lt;p&gt;Blogit源代码：&lt;a class="reference external" href="/static/img/wp/Blogit20120627.rar"&gt;Blogit20120627&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Zotero的style文件为&lt;a class="reference external" href="http://citationstyles.org/"&gt;CSL&lt;/a&gt;格式，其实质为xml，所以自己看看就可以摸到些门道。Windows下直接用Notepad++即可编辑，不推荐直接用记事本编辑，因为CSL是Unix文本格式，所以用记事本查看会没有换行。编辑过程中可以直接在Firefox标签页&lt;a class="reference external" href="chrome://zotero/content/tools/cslpreview.xul"&gt;chrome://zotero/content/tools/cslpreview.xul&lt;/a&gt;中预览，当前选中的文献在所有可用的style作用下生成的参考文献代码都可以看到，方便比较和进一步修改。修改编辑后一定要用&lt;a class="reference external" href="https://github.com/citation-style-language/styles/wiki/Validation"&gt;验证工具&lt;/a&gt;验证是否有错，推荐用在线的&lt;a class="reference external" href="http://simonster.github.com/csl-validator.js/"&gt;csl-validator.js&lt;/a&gt;。验证无误后即可用Zotero导入该style，如果已经导入那么覆盖原有文件即可。&lt;/p&gt;
&lt;p&gt;几点说明：&lt;/p&gt;
&lt;p&gt;1、一般来说，源网页和DOI、ISBN指向的网页很可能是同一个，所以如果你嫌太多超链接很难看，那么也可以去除源网页的链接，只要在Zotero设置Citation
Option里去掉Include URLs of paper articles in references前面的钩即可。&lt;/p&gt;
&lt;p&gt;2、Chinese Std GB/T 7714-2005 (numeric)
sytle文件的一个小问题：如果插入多篇文献时上标顺序是从大到小而不是标准的从小到大，那么应该把citation-number这个宏中的sort
从descending改为ascending。&lt;/p&gt;
&lt;p&gt;参考文献示例：&lt;/p&gt;
&lt;p&gt;[1] 陈永春编. &lt;a class="reference external" href="http://book.douban.com/subject/1151443/"&gt;MATLAB
M语言高级编程&lt;/a&gt;[M]. 清华大学出版社, 2004. &lt;a class="reference external" href="http://www.worldcat.org/wcpa/isbn/9787302075141"&gt;ISBN: 9787302075141&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;[2]
&lt;a class="reference external" href="http://www.360doc.com/content/11/0301/09/4539198_97069216.shtml"&gt;Matlab自定义函数的五种方法&lt;/a&gt;[EB/OL]. [2012-06-27].&lt;/p&gt;
&lt;p&gt;[3] Shampine L F,
Thompson S. &lt;a class="reference external" href="http://www.sciencedirect.com/science/article/pii/S0168927400000556"&gt;Solving DDEs in Matlab&lt;/a&gt;[J]. Applied Numerical
Mathematics, 2001, 37(4): 441–458. &lt;a class="reference external" href="http://dx.doi.org/10.1016/S0168-9274(00)00055-6"&gt;doi:10.1016/S0168-9274(00)00055-6&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;[4] L.F. Shampine, S. Thompson. &lt;a class="reference external" href="http://scholar.google.com/scholar?hl=zh-CN&amp;amp;q=Solving+Delay+Differential+Equations+with+dde23&amp;amp;btnG=%E6%90%9C%E7%B4%A2&amp;amp;lr=&amp;amp;as_ylo=&amp;amp;as_vis=0"&gt;Solving Delay Differential Equations
with dde23&lt;/a&gt;[J]. .&lt;/p&gt;
&lt;p&gt;[5] 陈丽安. &lt;a class="reference external" href="http://202.204.193.237/cupbbs/accessory/93/cb00d031-6df1-417b-a9e0-71c1aabff823.pdf"&gt;输出高品质 MATLAB
图形的方法与技巧&lt;/a&gt;[J]. 计算机应用研究, 2002, 19(1): 154–155.&lt;/p&gt;
</summary><category term="Zotero"></category><category term="Bibliography"></category></entry><entry><title>MIT-BIH开放数据库使用指南</title><link href="http://www.joshuazhang.net/posts/2012/MIT-BIH-manual.html" rel="alternate"></link><updated>2012-06-15T21:14:00+08:00</updated><author><name>Joshz</name></author><id>tag:www.joshuazhang.net,2012-06-15:posts/2012/MIT-BIH-manual.html</id><summary type="html">&lt;p&gt;最近因为项目任务要分析心电图数据，采用的是&lt;a class="reference external" href="http://ecg.mit.edu/"&gt;MIT-BIH&lt;/a&gt;开放数据库（或称PhysioBank数据库）。这个数据库不仅提供了经过筛选的各方面的生理数据集&lt;a class="reference external" href="http://www.physionet.org/physiobank/"&gt;PhysioBank&lt;/a&gt;，而且也提供了开源的数据处理和可视化工具&lt;a class="reference external" href="http://www.physionet.org/physiotools/"&gt;PhysioToolkit&lt;/a&gt;。对我这样的非医学类学生而言，光是看见那些医学术语就够头痛的了，还要掌握这样一套专门的基于Linux的工具，确实是个不小的挑战。好在我要完成的部分不需要很深入，所以马马虎虎也摸着些门道。不敢说会用，但是起码碰到问题方向在哪我已经清楚了，这里把这个数据库的使用简单介绍一下，方便新来的同学快速上手。当然如果你英语好的话，大可以自己慢慢翻文档，这也是要深入了解的惟一途径。&lt;/p&gt;
&lt;p&gt;首先说说数据库。你可以到&lt;a class="reference external" href="http://www.physionet.org/physiobank/database/"&gt;分类页面&lt;/a&gt;查找有没有自己感兴趣的数据集，上面都有比较详细的介绍。找到合适的数据后在对应页面直接将文件另存为就可以下载，当然这是比较笨的办法。推荐使用wget或者rsync来下载。wget可以用于下载单独的数据集，这样速度较快也比较快捷。例如下载mitdb：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;wget -r -np http://physionet.org/physiobank/database/mitdb/
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;中间的&lt;em&gt;physionet.org&lt;/em&gt;可以替换成离你最近的&lt;a class="reference external" href="http://www.physionet.org/mirrors/"&gt;镜像&lt;/a&gt;地址（好像西交的挂了，直接用原镜像吧），&lt;em&gt;mitdb&lt;/em&gt;替换成你要下载的数据集缩写名称（可以用&lt;a class="reference external" href="http://www.physionet.org/cgi-bin/atm/ATM"&gt;PhysioBank
ATM&lt;/a&gt;查看数据集对应缩写）。rsync用来下载所有数据也是非常方便的，方法看&lt;a class="reference external" href="http://www.physionet.org/faq.shtml#downloading-databases"&gt;这里1&lt;/a&gt;，当然这样做似乎没多大必要。&lt;/p&gt;
&lt;p&gt;对应这套数据集维护人员也开发了相应的工具包&lt;a class="reference external" href="http://www.physionet.org/physiotools/wfdb.shtml"&gt;WFDB&lt;/a&gt;,包括三个部分：WFDB库、WFDB命令行工具和WAVE，主要用于读取、分析和可视化数据，一些常用的算法如FFT和熵都已经实现。WFDB库用于在C、C++或者Fortran中读写WFDB兼容格式文件，命令行用于直接处理数据，WAVE可以看做其图形化前端，需要xview支持。软件应该是C语言编写，Linux原生支持，Windows需要Cygwin支持，安装文档都写得很详细了。这套工具很强大，同时也很复杂，文档在&lt;a class="reference external" href="http://www.physionet.org/physiotools/manuals.shtml"&gt;这里2&lt;/a&gt;，当然需要你对命令行和研究对象都比较熟悉。如果要快速找到自己需要的命令或工具，可以看看这个&lt;a class="reference external" href="http://www.physionet.org/physiotools/software-index.shtml"&gt;工具目录&lt;/a&gt;，很有帮助。&lt;/p&gt;
&lt;p&gt;如果没有那么高的要求或者不想碰命令行，那么它提供的&lt;a class="reference external" href="http://www.physionet.org/physiotools/matlab/"&gt;MATLAB软件包&lt;/a&gt;还是可以一用，不过功能就差点意思了，只能做基本的数据I/O，后续的算法都要自己实现，只能将就着用。这个页面除了官方发布的工具其实还有一些第三方编写的程序实现附加的功能，因为都是开源的，所以可以一看，对自己动手的朋友会有帮助。&lt;/p&gt;
&lt;p&gt;这套数据库确实组织得非常好，甚至还开发了在线数据导出工具。如果你被前面各种软件名词吓到，那么下面这个东东估计就是你所需要的：&lt;a class="reference external" href="http://www.physionet.org/cgi-bin/atm/ATM"&gt;PhysioBank
ATM&lt;/a&gt;，它的作用就是用浏览器可视化地预览或者导出数据，如图示，左边选择数据设置参数，右边微调选择输出模式。利用它，你就可以远离那些繁琐工具的困扰，点几下鼠标就可以方便地查看数据，然后将理想的数据段导出即可。这个方法适合新手使用，直观、快速才不会拒人于千里之外，哈哈。&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="PhysioBank ATM" src="http://i1078.photobucket.com/albums/w482/voidmous/blog/Science/20120615201304.png" style="width: 700px;" /&gt;
&lt;/div&gt;
&lt;p&gt;如果你使用了该数据库，并且准备要发文章，那么出于版权考虑，应当注意按照网站的要求进行引用，引用格式见&lt;a class="reference external" href="http://www.physionet.org/citations.shtml"&gt;这里3&lt;/a&gt;。另外如果某些地方有特别注明，那么也应该按照要求进行引用。因为这个数据库有很强的研究背景，所以有许多论文基于该数据库发表，不妨看看&lt;a class="reference external" href="http://physionet.org/pn-citations.shtml"&gt;他人的成果&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;如果你在使用过程中还有什么问题，那么我推荐你先看&lt;a class="reference external" href="http://www.physionet.org/faq.shtml"&gt;FAQ&lt;/a&gt;，大部分问题在这都能找到答案，此外还有一些&lt;a class="reference external" href="http://physionet.org/tutorials/"&gt;教程&lt;/a&gt;，涉及到方方面面，也可以看看。&lt;/p&gt;
&lt;p&gt;关于该数据库中文的论文还是比较少，但不是没有，参考文献已经注明。网络上讨论的也不多，但这两篇文章不可不看：《&lt;a class="reference external" href="http://blog.csdn.net/chenyusiyuan/article/details/2027887"&gt;MIT-BIH
ECG 心电数据的下载和读取图解&lt;/a&gt;》、《&lt;a class="reference external" href="http://blog.csdn.net/chenyusiyuan/article/details/2040234"&gt;MIT-BIH ECG
信号的数据读取方法和Matlab程序&lt;/a&gt;》，对于文件数据格式有较详细的分析。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;参考文献&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;[1] 唐文涛. MIT-BIH 生理信号管理及回放系统[D]. 济南: 山东师范大学, 2009.&lt;/p&gt;
&lt;p&gt;[2] 宋喜国, 邓亲恺. MIT-BIH 心率失常数据库的识读及应用[J].
中国医学物理学杂志, 2004, 21(004): 230–232.
[3] 徐效文, 曾超, 崔松野, et
al. &lt;a class="reference external" href="http://www.cqvip.com/qk/91690x/201108/36940878.html"&gt;MIT-BIH数据库心电数据重采样研究&lt;/a&gt;[J]. 计算机工程与应用, , 47(8):
245–248.
[4] 朱泽煌, 胡广书.
&lt;a class="reference external" href="http://www.cqvip.com/qk/90680x/1993004/1245724.html"&gt;MIT—BIH心电数据库的开发及用作检测标准&lt;/a&gt;[J]. 中国生物医学工程学报,
1993, 12(4): 244–249.
[5] 张乾, 蒋式勤. PhysioBank 数据库及其应用[J].
中国生物医学工程进展——2007 中国生物医学工程联合学术年会论文集 (下册),
2007.
[6] Goldberger A L, Amaral L A N, Glass L, et al. &lt;a class="reference external" href="http://circ.ahajournals.org/content/101/23/e215"&gt;PhysioBank,
PhysioToolkit, and PhysioNet: Components of a New Research Resource for
Complex Physiologic Signals&lt;/a&gt;[J]. Circulation, 2000, 101(23):
e215–e220. &lt;a class="reference external" href="http://dx.doi.org/10.1161/01.CIR.101.23.e215"&gt;doi:10.1161/01.CIR.101.23.e215&lt;/a&gt;.
[7] 张玉霞. 基于 MATLAB 与
WFDB 的 PhysioBank 数据库读取[J]. 北京生物医学工程, 2011, 30(3):
318–320.
[8] 梁伯虎, 张楠, 苏晓东.
&lt;a class="reference external" href="http://www.cqvip.com/qk/81625x/201111/39687170.html"&gt;基于Matlab的MIT-BIH心电信号读取与波形显示的实现&lt;/a&gt;[J]. 中国电子商务,
(11): 113–113. [9] 宋春丽. &lt;a class="reference external" href="http://www.cqvip.com/Main/Detail.aspx?id=33712105"&gt;怎样识读MIT-BIH中的心电信号&lt;/a&gt;[J].
科技资讯, (9): 27–27.&lt;/p&gt;
&lt;/p&gt;</summary><category term="Matlab"></category><category term="MIT-BIH"></category><category term="PhysioBank"></category><category term="WFDB"></category><category term="入门"></category><category term="心电"></category><category term="指南"></category><category term="数据库"></category></entry><entry><title>47个通用网页浏览器快捷键</title><link href="http://www.joshuazhang.net/posts/2012/universal-browser-keyboard-shortcuts.html" rel="alternate"></link><updated>2012-05-25T13:15:00+08:00</updated><author><name>Joshz</name></author><id>tag:www.joshuazhang.net,2012-05-25:posts/2012/universal-browser-keyboard-shortcuts.html</id><summary type="html">&lt;p&gt;本文翻译自&lt;a class="reference external" href="http://www.howtogeek.com/114518/47-keyboard-shortcuts-that-work-in-all-web-browsers/?utm_source=newsletter&amp;amp;utm_medium=email&amp;amp;utm_campaign=210512&amp;amp;utm_content=emailsidebar"&gt;howtogeek&lt;/a&gt;，总结得不错。不过从评论来看，似乎对opera支持不大好，读者请自行尝试。
&lt;img alt="image0" src="https://lh6.googleusercontent.com/x_pKkyiVelXIkdeWhGCILaf8h-qGWggeKW5FfL1HarCYRLC2WaxlouSELjisZcwrI8ziLYWGJLssOF3eOMmufgNHobGjRv3L0TQX_U86UeDW9jbYDjQ" /&gt;&lt;/p&gt;
&lt;p&gt;每个主流的网络浏览器都有一部分相同的快捷键设置。无论你使用Mozilla
Firefox，Google Chrome，Apple
Safari或者Opera——这些键盘快捷键应该都是有效的。每个浏览器都有自己特有的快捷键，不过学会使用通用的键位在不同浏览器或者电脑间切换时就非常有用。下面的列表同时也包括几个鼠标快捷键。&lt;/p&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;strong&gt;标签&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;按Ctrl +1-8 切换到指定的标签，从左边算起。 CTRL +9
切换到最后一个标签。&lt;img alt="image1" src="https://lh4.googleusercontent.com/hxcCzImXVO3k2Ic_HxI5vR3kDc2rsKi1mIQvQvC9l8XtDy2pmnlWOA6rnfDJn4GXqyL_iJ_PQN8NK2EBw5RdA8v8cyWmhFaSZ16l6Qd7OiRGXCDUVA0" /&gt;&lt;/p&gt;
&lt;p&gt;Ctrl + Tab
切换到下一个标签——换句话说，切换到右边的选项卡。（CTRL + PAGE UP
也可以，但在IE下无效。）&lt;/p&gt;
&lt;p&gt;Ctrl + Shift + Tab
切换到前一个标签——换句话说，切换到左边的选项卡。 （CTRL + PAGE DOWN
也可以，但IE下无效。）&lt;/p&gt;
&lt;p&gt;CTRL + W，CTRL + F4 关闭当前标签。&lt;/p&gt;
&lt;p&gt;Ctrl + Shift + T
-重新打开上次关闭的标签。&lt;/p&gt;
&lt;p&gt;&lt;img alt="image2" src="https://lh4.googleusercontent.com/RGm8i1KJGZYU58KAfe8taSJX6yjK7bpufJkTsO37xFNP3V4xEih4clt6GCSdQnmg024kcjHznnN4GVOtXcKUBoMExrH04xlSBC_VN-ItZJxX8vH8Y6o" /&gt;&lt;/p&gt;
&lt;p&gt;CTRL + T 建立新标签&lt;/p&gt;
&lt;p&gt;Ctrl + N
打开一个新的浏览器窗口。&lt;/p&gt;
&lt;p&gt;ALT + F4 关闭当前窗口。（所有应用程序通用哦）&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;strong&gt;鼠标操作&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;鼠标中键点击一个标签 关闭标签。 Ctrl + Left Click，Middle Click
后台标签中打开链接 Shift + Left Click 在新浏览器窗口中打开链接 Ctrl +
Shift + Left Click 在前台标签中打开链接。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;&lt;strong&gt;导航&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Alt +Left Arrow，Backspace 返回。 Alt +Right Arrow，Shift + Backspace
前进。 F5 刷新。 Shift + F5 刷新并跳过缓存，重新下载整个网站。 Esc
-停止。 ALT + HOME -打开主页。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2&gt;&lt;strong&gt;缩放&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Ctrl 和+，Ctrl +Mousewheel Up&amp;nbsp; 放大。 Ctrl 和- ，Ctrl +Mousewheel Down
缩小。 CTRL +0&amp;nbsp; 默认缩放级别。 F11 &amp;nbsp; 全屏模式。&lt;/p&gt;
&lt;p&gt;&lt;img alt="image3" src="https://lh4.googleusercontent.com/cCLQOUzcblCOWxUe039ZFZEddAma4BoCy46cc-bdtTEfzbF_BVQ-dEVeOSbspjh8uzxccLWP_dnDEKzLRbKWi_HjDOI8NcdjsVy5KFcEL3NXf-bfCLg" /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h2&gt;&lt;strong&gt;滚动&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Space，Page Down&amp;nbsp; 向下滚动一帧。 Page Up&amp;nbsp; 向上滚动一帧。 Home&amp;nbsp; 页面顶部。
End&amp;nbsp; 页面底部。 Middle Click&amp;nbsp; 用鼠标滚动页面。&lt;/p&gt;
&lt;p&gt;&lt;img alt="image4" src="https://lh6.googleusercontent.com/RBvmFecMjsIqTB683N08pV2Z2r6KStKqam2YmNp1kB-cgZPgl0nOFJLi1TuxiMxhKH2CBXFlnm6wIfr-M_O5EOY-unv03PFLx9EEUUbfO6k8mLrT9WI" /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h2&gt;&lt;strong&gt;地址栏&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Ctrl + L ，ALT + D，F6&amp;nbsp;&amp;nbsp; 聚焦地址栏输入网址 Ctrl + Enter
为地址栏文字加上www.前缀和.com后缀并载入该网站。比如，在地址栏输入howtogeek然后按Ctrl
+ Enter可以打开www.howtogeek.com ALT + Enter
在新标签中打开地址栏中的网址。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h2&gt;&lt;strong&gt;搜索&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;CTRL + K，CTRL + E
聚焦浏览器内置的搜索框，如果浏览器没有专用搜索框就聚焦在地址栏（CTRL + K
在IE浏览器下不起作用， 按Ctrl + E替代。） ALT + Enter
在新标签中执行搜索栏搜索。 Ctrl + F，F3 打开页面搜索工具窗口 Ctrl + G，F3
下一个搜索结果 Ctrl + Shift + G，SHIFT + F3&amp;nbsp; 上一个搜索结果&lt;/p&gt;
&lt;p&gt;&lt;img alt="image5" src="https://lh5.googleusercontent.com/umhFrCUC_c1AYT9M9qj7iXzo7gI_kRTG8SOYwgo_i6LN3ESOixHnNZTcbIu7ygmyO2J-4Hx5NmF_tRil0221uudjfdUj3Sb83YUj4hlludUYyZ58xmc" /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id9"&gt;
&lt;h2&gt;&lt;strong&gt;浏览历史与书签&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;CTRL + H&amp;nbsp; 打开浏览历史窗口。 Ctrl + J&amp;nbsp; 打开下载历史窗口。 Ctrl + D
收藏当前网站到书签。 Ctrl + Shift + Del
打开“清除浏览历史记录”窗口&lt;/p&gt;
&lt;p&gt;&lt;img alt="image6" src="https://lh6.googleusercontent.com/ZOuPKcbAq_yCBJwPgOmgACos-hoBgRpkfdF_7o4EdVw8MoJpUbgagjlAsFmJfzP5E64zZbGLlpHewiBV4amCCCw3mpRpVZRWLmmLlQnWbDQHqnRdKuc" /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id10"&gt;
&lt;h2&gt;&lt;strong&gt;其他功能&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Ctrl + P&amp;nbsp; 打印当前页。 Ctrl + S&amp;nbsp; 保存当前页面到您的计算机。 CTRL + O
从本地打开一个文件 CTRL + U&amp;nbsp; 查看当前网页源代码（IE下无效）。 F12
打开网页开发工具。（Firefox下无效）。&lt;img alt="image7" src="https://lh6.googleusercontent.com/cmxK7kVzoNOrVO4CuKRsO3PzQe7wprZEoT0szI_WTs2TEDHqk48DxDKqAS5e7M2EgchCQgq1p0Bh55PP6bE8K8Ik5QbbsmWeHX4ya97wfSa4mtheiaE" /&gt;&lt;/p&gt;
&lt;/p&gt;&lt;/div&gt;
</summary><category term="Keyboard Shortcuts"></category><category term="Internet Browser"></category></entry><entry><title>Runge Kutta方法求解微分方程</title><link href="http://www.joshuazhang.net/posts/2012/runge-kutta-ode.html" rel="alternate"></link><updated>2012-05-08T07:06:00+08:00</updated><author><name>Joshz</name></author><id>tag:www.joshuazhang.net,2012-05-08:posts/2012/runge-kutta-ode.html</id><summary type="html">&lt;p&gt;普通的常微分方程已经有成熟的各类方法进行求解，而且得到的是解析解的形式。不过对于在计算机上求解而言，符号运算编程的难度可能要超过数值运算编程，所以，直接寻求数值解在某些情况下可能更加方便。欧拉方法和龙格库塔方法就是常见的数值计算方法。
将一阶常微分方程初值问题写成如下形式：
\[\left\{\begin{array}\~y^{'}=f(x,y) \\y(x_0)=y_0 \\
\end{array}\right.\] 四阶Runge Kutta公式如下：
\[\left\{\begin{array}{l}y_{n+1}=y_n+\frac{h}{6}(K_1+2K_2+2K_3+K_4)\\x_{n+1}=x_n+1\\K_1=f(x_n,y_n)\\K_2=f(x_n+\frac{h}{2},y_n+\frac{h}{2}K_1)\\K_3=f(x_n+\frac{h}{2},y_n+\frac{h}{2}K_2)\\K_4=f(x_n+h,y_n+hK_3)\end{array}\right.\]
四阶Runge
Kutta公式在实际应用时精度较高（4阶精度）而且计算量适中，因此使用较多。
对于求解微分方程组，可以将方程组写成向量形式，这样上面的4阶Runge
Kutta公式不需要改变形式，只要把四个参数改成相应的向量形式即可。求解高阶微分方程则可以通过降维方式令\(y^'=x,y^{''}=x^'\)就可以转化为一阶微分方程组的形式。
利用4阶RK方法求解洛伦兹方程：
\[\left\{\begin{array}\frac{dx}{dt}=\sigma(y-x)\\
\frac{dy}{dt}=x(\rho-z)-y\\
\frac{dz}{dt}=xy-\beta~z\end{array}\right.\]取\(\sigma=10,\beta=\frac{8}{3},\rho=28\)。相空间轨迹如下图：
&lt;img alt="RK求解lorenz" src="http://i1078.photobucket.com/albums/w482/voidmous/blog/Science/RKlorenz.png" /&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;% By voidmous&lt;/span&gt;
&lt;span class="c"&gt;% 利用四阶Runge Kutta求解洛伦兹方程&lt;/span&gt;
&lt;span class="n"&gt;clear&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;clc&lt;/span&gt;
&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.005&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;sigma&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nb"&gt;beta&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;rho&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;zeros&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;zeros&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;inline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;[sigma\*(y-x);x\*(rho-z)-y;x\*y-beta\*z]&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;x&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;y&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;z&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;sigma&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;beta&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;rho&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;
&lt;span class="n"&gt;k1&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;sigma&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;beta&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;rho&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;k2&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;\*&lt;/span&gt;&lt;span class="n"&gt;k1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;\*&lt;/span&gt;&lt;span class="n"&gt;k1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;\*&lt;/span&gt;&lt;span class="n"&gt;k1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;sigma&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;beta&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;rho&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;k3&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;\*&lt;/span&gt;&lt;span class="n"&gt;k2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;\*&lt;/span&gt;&lt;span class="n"&gt;k2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;\*&lt;/span&gt;&lt;span class="n"&gt;k2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;sigma&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;beta&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;rho&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;k4&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;\*&lt;/span&gt;&lt;span class="n"&gt;k3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;\*&lt;/span&gt;&lt;span class="n"&gt;k3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;\*&lt;/span&gt;&lt;span class="n"&gt;k3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;sigma&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;beta&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;rho&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;(:,&lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)=&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;(:,&lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;\*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;k1&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;\*&lt;/span&gt;&lt;span class="n"&gt;k2&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;\*&lt;/span&gt;&lt;span class="n"&gt;k3&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;k4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)=&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="c"&gt;%静态显示洛伦兹变化轨迹 plot3(y(1,:),y(2,:),y(3,:)) view([20,32]);&lt;/span&gt;
&lt;span class="n"&gt;grid&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="c"&gt;%动画显示绘制过程 %暂时无法调整视角，也许看comet绘制原理有用？&lt;/span&gt;
&lt;span class="c"&gt;%comet3(y(1,:),y(2,:),y(3,:))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;[1]Wikipedia contributors.
Runge–Kutta methods[J]. Wikipedia, the free encyclopedia, Wikimedia
Foundation, Inc., 2012.&lt;/p&gt;
&lt;p&gt;[2]Simulation of Lorenz ’63 model: 4th order
Runge-Kutta[M]. 2010.&lt;/p&gt;
&lt;p&gt;[3]魏诺. 非线性科学基础与应用[M]. 科学出版社,
2004.&lt;/p&gt;
&lt;p&gt;[4]Wikipedia contributors. 龙格－库塔法[J].
维基百科，自由的百科全书, Wikimedia Foundation, Inc., 2012.&lt;/p&gt;
&lt;p&gt;[5]洛伦兹方程的matlab求解_百度文库[EB/OL]. [2012-05-01].
&lt;a class="reference external" href="http://wenku.baidu.com/view/169b50c7aa00b52acfc7ca50.html"&gt;http://wenku.baidu.com/view/169b50c7aa00b52acfc7ca50.html&lt;/a&gt;.&lt;/p&gt;
</summary><category term="Matlab"></category><category term="数值方法"></category><category term=""></category></entry><entry><title>几款云存储服务比较</title><link href="http://www.joshuazhang.net/posts/2012/cloud-storage-comparison.html" rel="alternate"></link><updated>2012-04-13T02:29:00+08:00</updated><author><name>Joshz</name></author><id>tag:www.joshuazhang.net,2012-04-13:posts/2012/cloud-storage-comparison.html</id><summary type="html">&lt;p&gt;所谓云存储服务，通俗点说就是网盘啦。不过现在各种免费网盘的服务其实并不仅限于存储，社交分享、同步备份都是很常见的功能，所以用云的概念可能更加合适（现在还称不上真正的云，但是趋势已经可以看出来了）。我个人用过国内国外的几个云存储服务，现在拿它们比较一番，顺便思考下云时代，什么样的存储才是我们（起码是我）真正所需的。&lt;/p&gt;
&lt;p&gt;首先还是把范围确定，我所说的云存储并非Rapidshare，hotfile，城通网盘此类以快速文件分享作为主打功能的网盘，而是指具备同步功能以打造用户的私有资料、信息云为目标的网盘。这样的概念可能有点泛，现在的网络存储基本都还没实现这样的目标，但是是否具备这样的野心还是可以看出来的。&lt;/p&gt;
&lt;p&gt;再来分析下必要的功能需求（此处仅对我而言）：&lt;/p&gt;
&lt;p&gt;同步功能。这是目前而言最重要也是最差异化的功能。对我这样寝室、实验室两头跑的人来说，用U盘可不是什么方便的事情，有同步功能我就可以在两头处理同一个文件而不用把工作地点锁定在某一个地方。同时，有一份网络备份可比什么U盘备份强。&lt;/p&gt;
&lt;p&gt;分享功能。这个我认为是从网盘时代遗传下来的功能，我个人并不常用，但是它也是不可或缺的，因为以此途径发布文件是最简单的事情，虽然目前暂时我没有这方面的需求。&lt;/p&gt;
&lt;p&gt;多平台共享。现在电子设备越来越多，操作系统也五花八门，兼顾主流平台应该是必须的。不过对于我而言，Linux平台的支持非常重要，尽管它并非主流。&lt;/p&gt;
&lt;p&gt;下面我简单比较下几个云存储服务：&lt;/p&gt;
&lt;p&gt;1、&lt;a class="reference external" href="https://www.dropbox.com/"&gt;Dropbox&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Dropbox作为这个方面的老大是当仁不让的，当然我有充足的理由。首先Dropbox的同步稳定性非常好，不会出现同步出错的情况，这说明它的同步管理机制十分优秀。同时，Dropbox专注于同步存储功能的优化，一些细化的功能往往最先在Dropbox上产生，比如选择同步机制。Dropbox并非不注重分享和功能的扩展，实际上，作为国外老牌的服务，dropbox早已经渗透进各式各样的集成服务中，比如这篇《&lt;a class="reference external" href="http://www.williamlong.info/archives/2044.html"&gt;Dropbox免费网盘高级使用技巧&lt;/a&gt;》和《&lt;a class="reference external" href="http://lusongsong.com/info/post/106.html"&gt;Dropbox有哪些另类应用？&lt;/a&gt;》应该可以给人不少启发，原来网盘还可以这样用（国内的服务还没法这样应用）！我自己就用Dropbox作为博客的备份空间，使用Wordpress插件&lt;a class="reference external" href="http://backwpup.com/"&gt;BackWPup&lt;/a&gt;就可以实现。Dropbox提供了这么优秀的服务，同时它还原生支持Linux平台，怎么能不让人心动呢。&lt;/p&gt;
&lt;p&gt;当然由于某些众所周知的原因，国内如果想体验这么优秀的服务是需要花&lt;a class="reference external" href="http://www.williamlong.info/archives/2585.html"&gt;一些周章&lt;/a&gt;的，但是我可以担保，如果你愿意有一些初期的投入，那么你后期的回报会是相当可观的。通过&lt;a class="reference external" href="http://db.tt/xGiyH7Ef"&gt;我的邀请链接&lt;/a&gt;开始吧。&lt;/p&gt;
&lt;p&gt;2、&lt;a class="reference external" href="http://www.yun.io/"&gt;Yunio&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;国内最先支持Linux的云存储服务（比坚果发布还要早）。这是我目前主力的存储服务。当然它相比于Dropbox惟一的优点就在于它位于国内，速度让人满意，同时它的初始免费空间相对较大，对于新用户比较友好。当然它还是有一些不让人满意的地方，比如会出现同步冲突的情况，这时候它会自动生成冲突文件的一个备份，那么你可能需要手动删除。不过这种情况多发生在你对文件存在频繁读写的情况下（我在某段时间内曾用Yunio同步firefox的profile，现在不需要了，因为firefox已经内置同步功能），一般的文件读写还是很稳定的。所以，如果你需要Linux平台支持，同时对Dropbox的强大和困境不感冒，那么我推荐你使用Yunio，从&lt;a class="reference external" href="http://www.williamlong.info/archives/2044.html"&gt;我的邀请链接&lt;/a&gt;开始吧。&lt;/p&gt;
&lt;p&gt;3、&lt;a class="reference external" href="https://jianguoyun.com"&gt;坚果云&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;坚果云官网其实早已经搭建好了，但是一直都未发布，内测了相当长时间，而一发布就宣布支持Linux，这当然对Linuxer而言是绝好的消息。从他们的做事风格来看，用户体验和需求是他们的最终追求，所以我还是很看好这个团队，善用佳软也在&lt;a class="reference external" href="http://xbeta.info/jianguo.htm"&gt;关注他们&lt;/a&gt;。他们提供的云存储也很别具一格，在其它云存储都以超大的免费空间作为卖点的时候，他们却不走寻常路：限流量不限空间。如果你的ISP对你限流量不限带宽你可能会抓狂，那么免费的云存储呢？该团队对这个的解释是想把坚果云打造成“数据保险柜”，而非“临时货仓”。这个理念应该说是很前卫的，用免费服务来打造收费品质，这对于一个小型企业而言很有挑战，如果你支持这种勇气，那么你可以通过&lt;a class="reference external" href="https://jianguoyun.com/d/ref/SZidYrFINROTwjEBjbi0jw"&gt;我的邀请链接&lt;/a&gt;来支持他们。&lt;/p&gt;
&lt;p&gt;4、&lt;a class="reference external" href="http://www.kuaipan.cn/"&gt;金山快盘&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;金山作为国内数一数二的软件公司，目前也一头扎入了“云海”中。从金山一贯的服务品质历史你可以对他们的产品抱有绝对的信心（最近的WPS
for
Linux更是给众Linuxer打了一记强心针），从我自己使用的情况看来确实如此。它的优势就在于金山打造的云服务体系，配合金山快写你完全可以把它打造成一个在线文档编辑平台。金山快盘一直都在进步，起码在Windows平台上国内的产品我认为他们已经做到最好了，如果你喜欢Windows平台，那么我推荐金山快盘，从&lt;a class="reference external" href="http://www.kuaipan.cn/index.php?ac=account&amp;amp;op=register&amp;amp;channel=m1xnys"&gt;我的邀请链接&lt;/a&gt;进入吧。&lt;/p&gt;
&lt;p&gt;5、其它网盘&lt;/p&gt;
&lt;p&gt;国内网盘最近如雨后春笋般冒出头来，不能不说是广大消费者的福音，我们可能多了选择的困惑，但是没有了选择我们就走入困境了。对于我上面没提到的云存储服务，并非它们做得不好（当然不能说它们做到了一流），只是含有某些方面的欠缺，起码不符合我现有的需求和标杆，但是它们不一定不适合你，只有你自己真正用过某个产品，你才拥有评判的权利，我对这些网盘用得不多，就不误人子弟了。&lt;/p&gt;
</summary><category term="Dropbox"></category><category term="云存储"></category><category term="同步"></category><category term=""></category></entry><entry><title>Linux帮助系统常见技巧</title><link href="http://www.joshuazhang.net/posts/2012/linux-manual.html" rel="alternate"></link><updated>2012-04-04T08:55:00+08:00</updated><author><name>Joshz</name></author><id>tag:www.joshuazhang.net,2012-04-04:posts/2012/linux-manual.html</id><summary type="html">&lt;p&gt;Linux下命令实在太多，学习命令行最佳途径当然是通过手册（manual），新手对帮助系统有所了解可以更快地上手Linux基本管理操作。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;man cmdname&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这是最基本的用法了，也是最有效的方法。man
page主要是面向unix程序员，因此事无巨细，对于常见的操作其实并不需要细看，了解书写格式，挑出几个选项就可以了。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;cmdname --help或者cmdname -h&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;相比上一条，这个对于新手更加适用，因为它只显示最常用的选项，文字也更精简，真正可以让你快速参考。另外还要说明的是，许多打包的可执行安装文件都可以用这条命令显示安装帮助，如一些后缀名为bin或者run的文件，在安装前有必要阅读一下。这条命令只能作用于外部命令，shell内部命令无法使用（虽然还是有输出文字）。判断一条命令是外部或者内部命令，可以用type
cmdname查询某个命令或者help查看所有内部命令。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;whatis cmdname&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;whatis命令显示的其实是manpage的名称一栏的注释，你可以试试man
whatis和whatis
whatis看看区别所在。如果只是想简单了解某条命令的用处，用whatis就再合适不过了。（whatis
man会出现三个带选项的man命令，为什么？）&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;info cmdname&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;info命令显示的帮助更加详尽，信息量更大，同时界面更加友好。不过不怎么常用&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;manual系统&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;每个命令的manpages其实包括8个章节，它们包括不同的内容，如下表：&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="10%" /&gt;
&lt;col width="27%" /&gt;
&lt;col width="13%" /&gt;
&lt;col width="17%" /&gt;
&lt;col width="17%" /&gt;
&lt;col width="17%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;章节&lt;/th&gt;
&lt;th class="head"&gt;描述&lt;/th&gt;
&lt;th class="head"&gt;普通用户&lt;/th&gt;
&lt;th class="head"&gt;软件开发人员&lt;/th&gt;
&lt;th class="head"&gt;文档组织人员&lt;/th&gt;
&lt;th class="head"&gt;系统管理人员&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;用户命令&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;系统调用&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;语言函数库调用&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;设备和网络界面&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;文件格式&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;游戏和示范&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;troff的环境、表格和宏&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;关于系统维护的命令&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;其它&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;在不同需求的情况下应当查看不同的章节，要查看指定的章节可以用man -sx
cmdname或者man x cmdname，其中x为章节对应的数字。比如查看库函数man -s3
open。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;常用快捷键&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;快捷键帮助h(man状态下)&lt;/p&gt;
&lt;p&gt;退出q&lt;/p&gt;
&lt;p&gt;下一屏space或者f(forward)，上一屏b(backward)&lt;/p&gt;
&lt;p&gt;下一行j，上一行k&lt;/p&gt;
&lt;p&gt;前向搜索/pattern，反向搜索?pattern&lt;/p&gt;
&lt;p&gt;下一个匹配n，上一个匹配N&lt;/p&gt;
&lt;p&gt;风格其实和vim相似，比如Ctrl+f也是下一页。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;man目录&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;/usr/share/doc/man/&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;中文manpages&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/lidaobing/manpages-zh"&gt;manpages-zh项目&lt;/a&gt;，安装后即可查看常用命令的中文manpage，不过似乎中文排版有点问题，看起来有点丑陋。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;彩色manpage&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;黑底白色的大量文字看久了很累，可以考虑自定义彩色的manpage，编辑～/.bashrc：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# colorful man page&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;PAGER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;`which less` -s&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;BROWSER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$PAGER&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;LESS_TERMCAP_mb&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;$&amp;#39;\E[01;34m&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;LESS_TERMCAP_md&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;$&amp;#39;\E[01;34m&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;LESS_TERMCAP_me&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;$&amp;#39;\E[0m&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;LESS_TERMCAP_se&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;$&amp;#39;\E[0m&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;LESS_TERMCAP_so&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;$&amp;#39;\E[01;44;33m&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;LESS_TERMCAP_ue&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;$&amp;#39;\E[0m&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;LESS_TERMCAP_us&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;$&amp;#39;\E[01;33m&amp;#39;&lt;/span&gt;这样一个简单可用的彩色manpage就搞定了，当然你也可以自己参照修改。
&lt;/pre&gt;&lt;/div&gt;
</summary><category term="Linux"></category><category term="manpage"></category></entry><entry><title>Archlinux下编译Audacious(cue、ape支持)</title><link href="http://www.joshuazhang.net/posts/2012/archlinux-audacious.html" rel="alternate"></link><updated>2012-03-20T16:25:00+08:00</updated><author><name>Joshz</name></author><id>tag:www.joshuazhang.net,2012-03-20:posts/2012/archlinux-audacious.html</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;首先安装需求：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Glib 2, GTK+ 2, Pango, Cairo, libmcs(AUR), libmowgli(AUR)&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;为了支持cue，还需要安装libcue&lt;/li&gt;
&lt;li&gt;下载audacious源码包与插件包： &lt;a class="reference external" href="http://audacious-media-player.org/download"&gt;下载地址&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;解压audacious源码包，然后常规三步曲&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;./configure
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo make &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; make install
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;再解压audacious插件源码包&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此时直接configure会出错，错误提示：&lt;/p&gt;
&lt;pre class="literal-block"&gt;
checking for AUDACIOUS... no
configure: error: Cannot find Audacious 3.2; have you installed Audacious yet?
&lt;/pre&gt;
&lt;p&gt;根据google到的方法：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;PKG_CONFIG_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/lib/pkgconfig:&lt;span class="nv"&gt;$PKG_CONFIG_PATH&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;LD_LIBRARY_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/lib:&lt;span class="nv"&gt;$LD_LIBRARY_PATH&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;后续问题：
ape不支持，dts不支持&lt;/p&gt;
</summary><category term="Archlinux"></category><category term="audacious"></category><category term="编译"></category></entry><entry><title>我的Firefox扩展总结</title><link href="http://www.joshuazhang.net/posts/2012/firefox-addon.html" rel="alternate"></link><updated>2012-03-01T13:50:00+08:00</updated><author><name>Joshz</name></author><id>tag:www.joshuazhang.net,2012-03-01:posts/2012/firefox-addon.html</id><summary type="html">&lt;p&gt;一、浏览优化类&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Adblock Plus&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 清除广告就靠它了。&lt;/li&gt;
&lt;li&gt;AutoPager
自动翻页。不想成为鼠标手？该插件必装。&lt;/li&gt;
&lt;li&gt;Flashblock
加快网页加载速度，屏蔽恼人的flash广告和自动播放功能&lt;/li&gt;
&lt;li&gt;GreaseMonkey&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 用脚本实现对个别站点的自定义配置&lt;/li&gt;
&lt;li&gt;Stylish
与GreaseMonkey类似，自定义CSS。GR的新界面很低效，配合该插件可以完美解决。&lt;/li&gt;
&lt;li&gt;iReader
重新布局文章，优化浏览体验。较少适用，需要网页符合规范。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;二、下载工具类&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;DownThemAll
坚守FF的原因之一，非常稳定高速的下载体验&lt;/li&gt;
&lt;li&gt;DownloadStatusbar&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 下载状态查看，必备的基本扩展&lt;/li&gt;
&lt;li&gt;NetVideoHunter&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 在线视频下载利器&lt;/li&gt;
&lt;li&gt;FlashVideoDownloader
除了下载视频外，更强大的地方在于可以下载flash&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;三、云同步类&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Xmarks&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 一流的书签管理，多浏览器同步&lt;/li&gt;
&lt;li&gt;LastPass
Xmarks的兄弟产品，在线密码管理，简化登录步骤&lt;/li&gt;
&lt;li&gt;ReadItLater
一键收藏，想快速离开电脑回到工作，必备扩展&lt;/li&gt;
&lt;li&gt;Evernote Web Clipper&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Evernote是最强大的PKM软件，没有之一&lt;/li&gt;
&lt;li&gt;Delicious Bookmarks&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 书签分享，社交功能强大&lt;/li&gt;
&lt;li&gt;Gmarks
Google书签产品，某些方面输于Delicious&lt;/li&gt;
&lt;li&gt;SpringPad&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 类似Evernote的PKM服务&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;四、工具类&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Firebug
试用过几次，非常强大的网页调试工具&lt;/li&gt;
&lt;li&gt;ScribeFire
博客发布工具，目前跨平台博客发布工具首选&lt;/li&gt;
&lt;li&gt;AutoProxy&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 代理工具，易用而强大&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/p&gt;</summary><category term="Firefox"></category><category term=""></category></entry><entry><title>ArchLinux入门浅谈</title><link href="http://www.joshuazhang.net/posts/2012/archlinux-intro.html" rel="alternate"></link><updated>2012-02-24T12:43:00+08:00</updated><author><name>Joshz</name></author><id>tag:www.joshuazhang.net,2012-02-24:posts/2012/archlinux-intro.html</id><summary type="html">&lt;p&gt;这是本人几次安装Arch摸爬滚打得出的被虐成果，发出来一方面是整理思路，同时也希望能够帮助同样在“享受”这一过程的朋友。&lt;/p&gt;
&lt;div class="section" id="arch"&gt;
&lt;h2&gt;为什么用Arch？&lt;/h2&gt;
&lt;p&gt;这方面的文章相当多，一搜一大把，我就不做什么总结发言了，写几点自己的想法。其实弊人最早接触的linux发行版是ubuntu和debian，当时ubuntu很被看好，不过还没流行到现在这个程度。那是我第一次被一个完全免费而且漂亮的东西打动了，期间零零碎碎玩过几次系统，但是由于技术水平有限，一直玩得不怎么顺手。直到最近，我开始越来越讨厌windows的臃肿庞大和功利，希望能够转移到linux平台上，把windows作为对“现实世界的妥协”。虽然debian也是很出色的系统，但是显然它和windows相同的特点就是较为臃肿，杂七杂八的东西自带一大堆（我不很清楚debian有没有精简定制的可能性）。出于这点考虑，我也玩过几天的LFS，注意，我当时不过装过几次linux，断断续续看过linux书籍的几个章节而已，可以想象当时我是怎样的抓耳挠腮吧^_^。当然这次实验以失败告终，我只能继续寻找能让自己足够满意的系统，终于，ArchLinux进入了我的视线。在我看来，Arch有以下几个特点是让我欲罢不能的：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;极大的定制性。虽然比不上LFS完全的定制性，但是在学习成本上要降下不少，而且LFS对于不致力于研究Linux架构的人似乎没什么必要。&lt;/li&gt;
&lt;li&gt;Pacman和AUR。Gentoo似乎也可以定制，但是每个软件都要编译对于我这样的新手而言那就是上刀山下火海。。。&lt;/li&gt;
&lt;li&gt;完善的文档。我没有接触过其他Linux发行版的文档，无法横向对比，但是就我使用的情况而言，wiki组织得很有条理，细节也非常清楚，如果你带有学习的心态，那么Arch不会让你失望。（这里有一个&lt;a class="reference external" href="http://www.cyberciti.biz/tips/linux-unix-bsd-documentations.html"&gt;比较&lt;/a&gt;，Arch的文档居然拍第二）&lt;/li&gt;
&lt;li&gt;搭积木。既然是“玩”Linux，那么从无到有是最让人兴奋的，相比有些发行版直接向你展示一个半成品，自己从基础开始搭建出一幢大楼会让人充满成就感。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;个人的使用感受就是如此，技术层面我暂时还说不出什么更深的东西，Linux是需要积累的。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;如何入门？&lt;/h2&gt;
&lt;p&gt;虚拟机是必要的。即使你有一定的Linux基础，仍然需要在虚拟环境下感受一下整个的组装过程，同时考虑可能碰到的问题和解决方案并做好记录（关键问题记录即可，不需要事无巨细，下面会谈到）。&lt;/p&gt;
&lt;p&gt;当然实际的安装更加必要，尤其是设计到驱动和X的部分，很有可能你就会在这儿倒下。&lt;/p&gt;
&lt;p&gt;不同于某些流行的发行版，Arch没有什么书籍可以参考，如果一定要说有的话也只有这本&lt;a class="reference external" href="http://www.google.com/url?sa=t&amp;amp;rct=j&amp;amp;q=&amp;amp;esrc=s&amp;amp;source=web&amp;amp;cd=7&amp;amp;ved=0CGIQFjAG&amp;amp;url=http%3A%2F%2Ftuxweet.linux.org.tr%2Fgetfile%2Fpid%3Apublic_250721%2Farch.pdf&amp;amp;ei=gHZHT5_eM62tiQel09SnDg&amp;amp;usg=AFQjCNH7_1Q5VGEdo98g8prZra0-D5msFw&amp;amp;sig2=3SPyg8TUbP0d6IBaY0G4DQ"&gt;Arch Linux Handbook&lt;/a&gt;。但是我们应当注意到这本书发布于2009年，由于Arch更新地非常快，因此书中很多内容已经不符合现在的情况，过程虽然相似，但是如果在细节上马虎，那么很有可能出现难以解决的问题（对于从地基开始搭建的系统更是如此）。所以这本书仅能作为参考，千万不能如标题所言作为手册。&lt;/p&gt;
&lt;p&gt;中文资料也有不少，主要是网页，最经典的是&lt;a class="reference external" href="http://linuxtoy.org/archives/the-perfect-linux-desktop-arch-linux-2007-08-2-1.html"&gt;打造完美的 Linux 桌面&lt;/a&gt;，同样的，里面的某些命令也严重过时。&lt;/p&gt;
&lt;p&gt;不要沮丧，初学者应当坚定一个信念，最好的文档就是官方wiki，它由最活跃的Arch用户打造，实时性、正确性都有保障，应当作为我们的最权威指南。里面大部分是英文，部分有中文（这里提一下，部分页面中文翻译相对英文原文有延时，如果参考中文手册出现问题，建议参考英文），玩Linux就应该做好挑战自己英语水平的准备，呵呵。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;如何使用手册？&lt;/h2&gt;
&lt;p&gt;这个问题困扰了我很久，虽然我有两台电脑可以自由使用，但是它们在空间上相距太远，无法做到让我边安装边参考。我也想过将wiki打印出来，但是在最初的安装中发现打印的总是不够，你需要不停地链接到其它文章，所以只能作罢（当然如果你熟练了，那么需要参考的文章就少了，但那就不是入门者的问题了）。&lt;/p&gt;
&lt;p&gt;这个问题在安装基本系统时最为突出，因为一旦装好了GUI和网络驱动，那你可以方便地在浏览器中参考，但是如果GUI安装出现问题那就相当麻烦（网络有问题那安装arch就没啥意义了，除非你只需要基本工具），总不能重启切到windows搜索再来吧？&lt;/p&gt;
&lt;p&gt;实际上这个问题Arch的维护人员早就替你解决了，这主要分两个阶段：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;安装基本系统时。如果你足够细心，那么你会看到Arch的提示，在Arch的ISO文件里就存了一份最新的Offical Installation Guide en，位于/usr/share/aif/docs/official_installation_guide_en，用vi或者nano打开即可。你可能会问，我打开了文档那我怎么继续安装呢？不要忘了，Linux有多个终端，你可以Ctrl+ALT+F2在第二个终端看文档，再Ctrl+ALT+F1切换会终端1,还可以用ALT+F7看安装实时日志，现在知道Linux多用户终端的好处了吧。&lt;/li&gt;
&lt;li&gt;配置系统GUI时。这个时候初学者如果手头没有参考手册，面对黑压压的终端完全无从操作。这时只要你网络配置正常，那么你照样可以参考wiki。当然这时是没法用Firefox或者Chrome的，但我们有lynx，它是一个终端的网络浏览器，支持在字符界面下查看网页或者上网（直接用pacman命令安装），为了效率考虑，我们直接把wiki下载下来，而不要去上网刷新了。这同样很简单：&lt;tt class="docutils literal"&gt;pacman &lt;span class="pre"&gt;-S&lt;/span&gt; &lt;span class="pre"&gt;arch-wiki-docs&lt;/span&gt; &lt;span class="pre"&gt;arch-wiki-lite&lt;/span&gt;&lt;/tt&gt;。其中arch-wiki-docs是网页，arch-wiki-lite是文本，推荐用lynx浏览网页版（因为在字符终端下有高亮，Geek味马上就来了！）。PS：安装后直接打开/usr/share/doc/arch-wiki/html/index.html就可以了，lynx有搜索功能，非常实用。同样的你也需要在不同终端下切换文档和工作空间。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;有了这个工具，安装过程就不再黑暗，我甚至都不想切到图形界面去了^_^（有zhcon这还真没有什么难的）。只要善用该方法，安装Arch时不再需要大量的文档准备工作，只要对目标配置了解即可，边参考边装系统，多装几遍自然就熟悉了，除了重要的问题做点记录外，基本不需要准备小本子了。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;如何找到适合的软件？&lt;/h2&gt;
&lt;p&gt;Arch默认的包管理工具是pacman，主要有两个配置文件：/etc/pacman.conf和/etc/pacman.d/mirrorlist。pacman可以安装的软件可以到&lt;a class="reference external" href="http://www.archlinux.org/packages"&gt;这里&lt;/a&gt;搜索。AUR包含的软件可以到&lt;a class="reference external" href="https://aur.archlinux.org"&gt;这里&lt;/a&gt;搜索。应当善用这两个搜索，当然你也可以命令行方式搜索，不过要注意源的配置。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h2&gt;学习什么？&lt;/h2&gt;
&lt;p&gt;不同Linux有不同特点，这些特点决定了用户在该发行版下大量的时间在干什么，比如Ubuntu用于娱乐，Debian用于编程，Gentoo用于管理服务器。对我而言，学习Linux主要目的在于熟悉工作平台，写LaTeX文档以及偶尔编程（当前的目标），所以折腾X和软件（Arch高度的定制性保证了我可以方便地折腾各种WM和DE）、提高LaTeX水平以及Matlab和C语言编程是我可以着力的方向。当然，适当的娱乐同样需要，Mplayer的使用以及Wine平台都需要了解。&lt;/p&gt;
&lt;/div&gt;
</summary><category term="Archlinux"></category><category term="wiki"></category><category term="入门"></category><category term="安装"></category><category term="手册"></category><category term="技巧"></category></entry><entry><title>标准差浅谈</title><link href="http://www.joshuazhang.net/posts/2012/standard-deviation.html" rel="alternate"></link><updated>2012-02-21T01:08:00+08:00</updated><author><name>Joshz</name></author><id>tag:www.joshuazhang.net,2012-02-21:posts/2012/standard-deviation.html</id><summary type="html">&lt;p&gt;本文翻译自 &lt;a class="reference external" href="http://mathcentral.uregina.ca/RR/database/RR.09.95/weston2.html"&gt;A note on standard deviation&lt;/a&gt;
，解释了让大部分统计学入门者感到困惑的一个经典问题。&lt;/p&gt;
&lt;p&gt;假如你正同时上几门课并且刚刚通过考试拿到成绩。很自然的，我们想了解班里其他学生的情况好让你的成绩有个参照。平均值或中位数可以告诉我们所有成绩的“中心值”或者“中间数”，但是它们很难体现成绩的分布或者变化。&lt;/p&gt;
&lt;p&gt;我们来看一个小例子。假如5名学生参加三门课程获得的成绩如下：&lt;/p&gt;
&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th&gt;课程1
&lt;/th&gt;&lt;th&gt;课程2
&lt;/th&gt;&lt;th&gt;课程3
&lt;/th&gt;&lt;/tr&gt;&lt;tr align="center"&gt;&lt;td&gt;82
&lt;/td&gt;&lt;td&gt;82
&lt;/td&gt;&lt;td&gt;67
&lt;/td&gt;&lt;/tr&gt;&lt;tr align="center"&gt;&lt;td&gt;78
&lt;/td&gt;&lt;td&gt;82
&lt;/td&gt;&lt;td&gt;66
&lt;/td&gt;&lt;/tr&gt;&lt;tr align="center"&gt;&lt;td&gt;70
&lt;/td&gt;&lt;td&gt;82
&lt;/td&gt;&lt;td&gt;66
&lt;/td&gt;&lt;/tr&gt;&lt;tr align="center"&gt;&lt;td&gt;58
&lt;/td&gt;&lt;td&gt;42
&lt;/td&gt;&lt;td&gt;66
&lt;/td&gt;&lt;/tr&gt;&lt;tr align="center"&gt;&lt;td&gt;42
&lt;/td&gt;&lt;td&gt;42
&lt;/td&gt;&lt;td&gt;65
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;每一个课程都有一个平均值，\(\overline{x}\)，且都为66，尽管如此，不同课程成绩的波动仍然有很大的差异。对这种波动的测量的其中一种方法是极差，也就是最大值与最小值之差。本例中，前两门课程极差均为82-42=40而第三门课程极差为67-65=2。因为课程1和课程2有相同的极差但是它们的偏差明显不同，所以极差不是一个测量偏差的理想指标。我们还可以这样看待偏差，课程3中所有的成绩都和平均值比较接近，课程1中有些接近而有些远离，课程2中所有成绩都远离均值。按照这样的观点我们可以引入标准差的概念。&lt;/p&gt;
&lt;p&gt;首先来看看课程1，对每个学生计算其成绩与平均分的差值。&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="24%" /&gt;
&lt;col width="76%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;课程1&lt;/th&gt;
&lt;th class="head"&gt;\(x_1-\overline{x}\)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;82&lt;/td&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;78&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;70&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;58&lt;/td&gt;
&lt;td&gt;-8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;42&lt;/td&gt;
&lt;td&gt;-24&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;这些差值的平均可以计算得到并作为对偏差的一种度量方式，在此例中其值为0。我们真正需要的其实是每个分数与均值之间的距离。你可以对差值取绝对值再平均，称之为平均差（mean
deviation），即\(md=\frac{\sum|x_1-\overline{x}|}{n}\),n为课程的学生数。对课程1而言\(md=\frac{64}{5}=12.5\)。另一种处理负差值的方式就是取平方相加。&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="13%" /&gt;
&lt;col width="41%" /&gt;
&lt;col width="46%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;课程1&lt;/th&gt;
&lt;th class="head"&gt;\(x_1-\overline{x}\)&lt;/th&gt;
&lt;th class="head"&gt;\((x_1-\overline{x})^2\)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;82&lt;/td&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;256&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;78&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;144&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;70&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;58&lt;/td&gt;
&lt;td&gt;-8&lt;/td&gt;
&lt;td&gt;64&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;42&lt;/td&gt;
&lt;td&gt;-24&lt;/td&gt;
&lt;td&gt;576&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;第三列的和为1056。为了求得标准差s，将该和除以n-1并开方。课程1的方差则为\(s=\sqrt{\frac{\sum(x_1-\overline{x})^2}{n-1}}=\sqrt{\frac{1056}{4}}=16.2\)&lt;/p&gt;
&lt;p&gt;同样可以计算得到课程2和课程3方差分别为21.9和0.7。课程3分数都靠近均值因此方差非常小；课程1分数分布在42和82之间，方差也相当可观；课程2分数都远离均值，方差因此更大。方差是统计学家最常用的测量数据集偏差的量。&lt;/p&gt;
&lt;p&gt;我们需要对分母采用n-1做出一个解释。为此我们换一个例子。假设我对北美中学生每天花在数学作业上的时间感兴趣。这里总体就是所有北美的中学生，数目非常大。设人数为N，我真正的兴趣在于这个总体的均值和方差。统计学家习惯于用希腊字母表示总体的量，因此总体均值记为\(\mu=\frac{\sum
x_1}{N}\)，类似的方差为\(\sigma=\sqrt{\frac{\sum(x_1-\mu)^2}{N}}\)。注意这里分母为N。&lt;/p&gt;
&lt;p&gt;统计学家通常只选择一个样本，比如n个学生，在这个小数据集上估计\(\mu\)和\(\sigma\)，而不是直接对这么大的总体进行统计。这里n可能是25,30或100或者甚至1000，不过它肯定远小于N。为了估计\(\mu\)很自然地我们可以用样本均值\(\overline{x}\)。同样的为了估计\(\sigma\)似乎用\(\sqrt{\frac{\sum(x_1-\overline{x})^2}{n}}\)也很合理，不过这样计算往往会“低估”\(\sigma\)，尤其是在n比较小的时候。由于这个以及其它技术原因，通常\[s=\sqrt{\frac{\sum(x_1-\overline{x})^2}{n-1}}\]被用来估计\(\sigma\)。&lt;/p&gt;
&lt;p&gt;如果你有计算器可以直接计算方差的话你可以试着找出它使用的是哪种计算方法。用一个3个数字的数据集-1,0,1，用手工和计算器的方式分别计算方差，看看计算器使用的是哪种计算方法吧。&lt;/p&gt;
&lt;p&gt;译者注：该文章在网上发表后，有老师希望文章作者对n与n-1的选择问题作出更详尽的解释，本文作者回复邮件称可以用一个小实验来进行验证。这里把回复邮件也做了个简单的翻译：&lt;/p&gt;
&lt;p&gt;与其对我所说的“其它技术原因”做一个理论上精巧的阐述，我更愿意建议你和你的学生做一个实验以说明“这个数值往往低估了\(\sigma\)值”&lt;/p&gt;
&lt;p&gt;以及“其它技术原因”是什么。我将在下面的讲述中针对\(\sigma^2\)，而非\(\sigma\)。&lt;/p&gt;
&lt;p&gt;我们用白豆和黑豆来进行实验。你可以用任何除了使用视觉外难以区分的物体来模拟。你可能需要60到100个这样的物件，其中1/4作为白豆，&lt;/p&gt;
&lt;p&gt;3/4作为黑豆。假定每个白豆取值为5，黑豆取值为1。这样总体就设置好了。整个总体的比例以及均值、方差都应当向你的学生保密直到实验&lt;/p&gt;
&lt;p&gt;完成。很简单的，总体的均值为：\[\mu=1(\frac{3}{4})+5(\frac{1}{4})=2\]方差为：\[\sigma^2=(1-2)^2(\frac{3}{4})+(5-2)^2(\frac{1}{4})=3\]&lt;/p&gt;
&lt;p&gt;学生的任务是要利用一个随机的测试样本来估计豆子的均值及方差。为了让计算保持简单我建议样本数目设为n=3。把豆子放在一个学生无法&lt;/p&gt;
&lt;p&gt;看到但是可以取出的地方，比如一个袋子或者一个瓶子里，每个人每次随机取出3颗豆子并做样本记录。每个学生记录完后应当将豆子放回。如&lt;/p&gt;
&lt;p&gt;果你能得到50到60个样本那就最好了，这样你就可以让每个学生选择两个样本并且独立地处理它们。&lt;/p&gt;
&lt;p&gt;每个学生应当计算他的样本的均值以及方差，并且要计算（方差）两次，一次除以n,一次除以n-1。把学生交给你的结果汇总记录在三栏里面，&lt;/p&gt;
&lt;p&gt;一栏为均值，一栏为除以n得到的方差，另一栏为除以n-1得到的方差。你会发现均值一栏只有四种不同的数值，其它两栏都只有两种不同的值。&lt;/p&gt;
&lt;p&gt;这是由于样本值n=3选得比较小的缘故。如果样本值大一点那么每栏可能值得数目就会多一点。&lt;/p&gt;
&lt;p&gt;我们首先考虑第一栏，即均值。该栏里的每一个数值都是对总体均值的一个估计。现在告诉学生们总体的均值这样他们就可以看到有些估计值太&lt;/p&gt;
&lt;p&gt;大而另一些太小。再计算该栏所有值的均值。这个均值应当很靠近2，也就是总体的均值。从理论上说，“平均而言”，样本均值和总体均值是&lt;/p&gt;
&lt;p&gt;相等的。我们把这样的性质称之为无偏，样本均值就是总体均值的一个无偏估计。&lt;/p&gt;
&lt;p&gt;现在考虑第二和第三栏，计算它们的均值并告诉学生们总体的方差。除以n-1得到的方差的均值应当很接近总体的方差而另一栏的均值就会小得&lt;/p&gt;
&lt;p&gt;比较多。样本方差（除以n-1）是总体方差的一个无偏估计。样本方差（除以n）是总体方差的一个有偏估计，并且“总是低估\(\sigma\)”。&lt;/p&gt;
&lt;p&gt;最后一点。当分母为n-1时计算出来的值为总体方差的一个无偏估计。有没有可能存在一个比样本方差更好的对总体方差的估计值呢？你不仅仅&lt;/p&gt;
&lt;p&gt;希望这个新的估计值是无偏的而且还希望在该栏的所有的新的估计值大部分都接近总体方差。也就是说，你希望新的估计值的方差要小。这是我&lt;/p&gt;
&lt;p&gt;所说的用样本方差来估计总体方差的“其它技术原因”之一。在所有你可以使用的合理的估计当中，样本均值有着最小的方差。&lt;/p&gt;
&lt;p&gt;希望这个建议能有帮助。如果你做了这个实验，请告诉我结果如何。&lt;/p&gt;
&lt;p&gt;有博士生做了本文作者建议的实验并且给出了&lt;a class="reference external" href="http://mathcentral.uregina.ca/RR/database/RR.09.95/javier.xls"&gt;excel表格&lt;/a&gt;，部分截图如下：&lt;/p&gt;
&lt;img alt="quilez" src="http://mathcentral.uregina.ca/RR/database/RR.09.95/quilez.gif" /&gt;
&lt;p&gt;补充：实际上n和n-1的选择问题用数学理论很容易解释，那就是n-1时样本方差的期望值就是总体方差（对样本方差求期望，简单推导即可得到）。造成大部分人困惑的原因就是n-1没有n看上去那么自然，同时对于总体和样本的概念以及它们的地位有所混淆。这篇文章其实讲的很浅显，但是国外教授对于简单问题往往会给出大量的篇幅，这与国内教材动辄大篇数学公式的风格大不一致。我们不能简单地说两种模式孰高孰低，但是国人受到苏联模式的影响如此深远，却始终成不了数学大国，恐怕是时候改变下思路了。&lt;/p&gt;
</summary><category term="估计"></category><category term="总体"></category><category term="无偏"></category><category term="标准差"></category><category term="统计学"></category></entry><entry><title>Google Reader使用技巧</title><link href="http://www.joshuazhang.net/posts/2012/google-reader-tips.html" rel="alternate"></link><updated>2012-02-18T16:14:00+08:00</updated><author><name>Joshz</name></author><id>tag:www.joshuazhang.net,2012-02-18:posts/2012/google-reader-tips.html</id><summary type="html">&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;p&gt;Google Reader
确实是一个不可多得的服务，我用上GR没几天已经爱不释手了。GR非常容易上手，但是要玩转GR，没有使用经验的积累是不可能的，下面我就列举一些自己在
使用GR过程中体会到的一些技巧，既是自己知识的整理过程，也是一个温故知新的过程。当然，这里面有我自己的心得，不可避免的也有从搜索得来的知识，来源
较多，恕不列明。&lt;/p&gt;
&lt;p&gt;一、访问技巧&lt;/p&gt;
&lt;p&gt;1、HTTP vs HTTPS
HTTP和HTTPS的区别从技术层面来说那是可以长篇大论的，通俗的理解就是后者是前者的加密版。应用
HTTPS，用户和网站之间的交互难以被简单地分析或窃取。由于功夫网的强大，HTTP和HTTPS享受着不同的待遇，Google许多的服务在HTTP
下时常会被reset（如果你没碰到过那你确实太河蟹了），而HTTPS就要好很多。这是因为HTTP的明文传输会被轻易地检索到敏感词，访问被拒绝。当
然，魔高一尺，道高一丈，HTTPS也并非万能的，不过在现今的网络环境下，HTTPS应当是我们体验Google强大服务的首选。&lt;/p&gt;
&lt;p&gt;2、IPv4 VS IPv6&lt;/p&gt;
&lt;p&gt;Google的IPv4地址很多，但是仍然饱受GFW骚扰，IPv6是下一代的IP分配方案，已经在大学间普及。教育网的用户使用IPv6访问Google是相当方便的，强烈推荐。&lt;/p&gt;
&lt;p&gt;二、快捷键技巧&lt;/p&gt;
&lt;p&gt;GR每天都会更新上百条新文章，如果我一条一条地点开看，不知道会是我的
DeathAdder先坏还是我的食指先坏。让人欣慰的是，Google
Reader是支持快捷键的，而且显然这些快捷键是精心设计过的，谁用谁知道~&lt;/p&gt;
&lt;p&gt;1、GR的快捷键很多，但是最重要的只有一条，那就是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;strong&gt;?：快捷键帮助&lt;/strong&gt;&lt;/blockquote&gt;
&lt;p&gt;只要你记住了这一条，并且不断查阅，GR的快捷键就可以迅速掌握。&lt;/p&gt;
&lt;p&gt;2、视图 GR的条目有两种视图模式，用1和2两个快捷键可以切换：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;1:切换至扩展视图（全文列表）&lt;/li&gt;
&lt;li&gt;2:切换至列表视图（摘要列表）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;3、跳转&lt;/p&gt;
&lt;p&gt;这是GR最基本的操作之一，GR起码有3个快捷键可以实现，它们分别是:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;空格：下一个条目或页面&lt;/li&gt;
&lt;li&gt;j/k：下一个/上一个条目&lt;/li&gt;
&lt;li&gt;n/p：向下/向上扫描条目（仅列表）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;三者的区别也很明显：空格是智能跳转，GR会判断当前需要跳转内容还是跳转条目，j/k是全文跳转，n/p则是条目间跳转。空格显然是多数情况下最佳的选择。&lt;/p&gt;
&lt;p&gt;很多情况下我们需要跳转到原文以看到更多信息，快捷键为：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;v：查看原始内容&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;GR会在新页面开启原文网页，新手又有问题了，那我怎么返回GR呢，难道又得把手移到鼠标去操作？这也太没效率了。实际上，这里附送两个浏览器通用标签快捷键（至少FF，Chrome和IE测试可用）：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Ctrl+TAB：切换标签（再加上Shift可以往回切换）&lt;/li&gt;
&lt;li&gt;Ctrl+W：关闭当前标签&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;怎么样？有了这两个快捷键，我们的操作就不会被打乱了。&lt;/p&gt;
&lt;p&gt;4、阅读
信息时代阅读越来越浅，很多内容我们都是一扫而过，实际上很多网文还是需要仔细地品味的。如果我们要认真阅读，但是GR的侧边栏和标题总是会让我们分心，怎么办？贴心的Google为我们带来两个快捷键解决这个问题：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;u：隐藏/取消隐藏左侧模块&lt;/li&gt;
&lt;li&gt;f：切换至全屏模式&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;笔者更常用f，看到精美的文章，f键切换到全屏就可以慢慢地观看了。如果搭配Firefox或者Chrome，默认的阅读空间就很大了，全屏后更加清爽。&lt;/p&gt;
&lt;p&gt;三、订阅&lt;/p&gt;
&lt;p&gt;互联网如此浩瀚，没人敢说自己了解了其中的千分之一，总有无数的好网站在你眼前错过，好的RSS源也是如此。那么如何发现好的订阅源？Google当然替你想到了，GR探索里面就推荐了不少好的源，你也可以搜索到自己想要关注的东东。GR甚至还会根据你已经订阅的源分析你的喜好然后推荐你可能会喜欢的源，根据我的经验，这些推荐都值得一看。&lt;/p&gt;
&lt;p&gt;很多网站只提供摘要RSS，老让我们快捷键跳过去再切回来太蛋疼了，于是各种全文RSS转换工具应运而生。我用过的工具也不多，但是有几个转换引擎值得推荐:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://fulltextrssfeed.com"&gt;FullText Rss Feed&lt;/a&gt;（第一推荐，似乎没有失手过，中文支持完美）&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://mrss.dokoda.jp/"&gt;mrss.dokoda.jp&lt;/a&gt;（用得较少，但是还可以）&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://fivefilters.org/content-only/"&gt;fivefilters.org&lt;/a&gt;（转收费了，免费限制较多，其它工具也可以一看）&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</summary><category term="Google Reader"></category><category term="快捷键"></category><category term="技巧"></category></entry><entry><title>Pelican 的 LaTeX 集成</title><link href="http://www.joshuazhang.net/posts/2012/latex-pelican.html" rel="alternate"></link><updated>2012-02-18T05:48:00+08:00</updated><author><name>Joshz</name></author><id>tag:www.joshuazhang.net,2012-02-18:posts/2012/latex-pelican.html</id><summary type="html">&lt;p&gt;本文主要用于测试 Pelican 与 MathJax 配合显示数学公式&lt;/p&gt;
&lt;h2 id="pelican-mathjax"&gt;为 Pelican 添加 MathJax 支持&lt;/h2&gt;
&lt;p&gt;鉴于并非每篇文章都会有数学公式，而&lt;code&gt;MathJax.js&lt;/code&gt;的资源加载在国内并不稳定，因此只在需要显示数学公式的 HTML 文件里才添加&lt;code&gt;MathJax CDN&lt;/code&gt;。一个简单的方法是在需要公式显示的文章里加入&lt;code&gt;mathjax=true&lt;/code&gt;的元数据声明：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;Markdown
Mathjax: true
reST
:mathjax: true
HTML
&amp;lt; meta name=&amp;quot;mathjax&amp;quot; content=&amp;quot;true&amp;quot; /&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后还需要在 Pelican 的主题文件添加判断是否需要启用 MathJax 的&lt;code&gt;Jinja&lt;/code&gt;代码，将以下代码保存在空文件&lt;code&gt;THEME/templates/mathjax.html&lt;/code&gt;中：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;{# LaTeX mathjax support&lt;/span&gt;
&lt;span class="c"&gt;    If the post has metadata &amp;quot;mathjax=true&amp;quot;, then add mathjax cdn support&lt;/span&gt;
&lt;span class="c"&gt;#}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;article.mathjax&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;&amp;lt;script type=&amp;quot;text/x-mathjax-config&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;  MathJax.Hub.Config({&lt;/span&gt;
&lt;span class="x"&gt;    tex2jax: {&lt;/span&gt;
&lt;span class="x"&gt;      inlineMath: [ [&amp;#39;$&amp;#39;,&amp;#39;$&amp;#39;], [&amp;quot;\\(&amp;quot;,&amp;quot;\\)&amp;quot;] ],&lt;/span&gt;
&lt;span class="x"&gt;      processEscapes: true&lt;/span&gt;
&lt;span class="x"&gt;    }&lt;/span&gt;
&lt;span class="x"&gt;  });&lt;/span&gt;
&lt;span class="x"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;加速国内访问可以使用 &lt;a href="http://www.freecdn.cn/"&gt;www.freecdn.cn&lt;/a&gt; 或者&lt;code&gt;GitCafe&lt;/code&gt;上的地址：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://libs.cncdn.cn/mathjax/2.3/MathJax.js?config=TeX-AMS-MML_HTMLorMML&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://pkuwwt.gitcafe.com/MathJax/MathJax.js?config=TeX-AMS-MML_HTMLorMML&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在需要判断是否开启 MathJax 的模板文件中（比如&lt;code&gt;index.html&lt;/code&gt;、&lt;code&gt;article.html&lt;/code&gt;等）的合适位置添加&lt;code&gt;{% include "mathjax.html" %}&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="_1"&gt;公式编辑&lt;/h2&gt;
&lt;h3 id="html"&gt;HTML 文档&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;MathJax.js&lt;/code&gt;的作用是把 HTML 源文件中的公式 Block 转换为 CSS 的字体和位置控制代码
。公式块的声明有三种：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="s"&gt;\(&lt;/span&gt;&lt;span class="nb"&gt; ... Inline Equation ... &lt;/span&gt;&lt;span class="s"&gt;\)&lt;/span&gt;

&lt;span class="sb"&gt;\[&lt;/span&gt;&lt;span class="nb"&gt; ... Displayed Equation ... &lt;/span&gt;&lt;span class="s"&gt;\]&lt;/span&gt;

&lt;span class="sb"&gt;$$&lt;/span&gt;&lt;span class="nb"&gt; ... Displayed Equation ... &lt;/span&gt;&lt;span class="s"&gt;$$&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;默认唯独不支持&lt;code&gt;$ ... Inline Equation ... $&lt;/code&gt;方式（可手动设置）。&lt;/p&gt;
&lt;p&gt;洛伦兹方程：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;$$\begin{aligned}
\dot{x} = \sigma(y-x) \\
\dot{y} = \rho x - y - xz \\
\dot{z} = -\beta z + xy
\end{aligned}$$
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;$$\begin{aligned}
\dot{x} = \sigma(y-x) \
\dot{y} = \rho x - y - xz \
\dot{z} = -\beta z + xy
\end{aligned}$$&lt;/p&gt;
&lt;p&gt;Cauchy-Schwarz不等式：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;\\[ \left( \sum_{k=1}^n a_k b_k \right)^2 \leq \left( \sum_{k=1}^n a_k^2 \right) \left( \sum_{k=1}^n b_k^2 \right) \\]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;\[ \left( \sum_{k=1}^n a_k b_k \right)^2 \leq \left( \sum_{k=1}^n a_k^2 \right) \left( \sum_{k=1}^n b_k^2 \right) \]&lt;/p&gt;
&lt;h3 id="_2"&gt;标记语言文档&lt;/h3&gt;
&lt;p&gt;应该注意到标记语言需要先转换为 HTML 文档，此过程中需要控制特殊字符&lt;code&gt;\&lt;/code&gt;，因此用非 
HTML 的标记语言写作时必须写成&lt;code&gt;\\&lt;/code&gt;的格式转换为 HTML 时才会得到正确的&lt;code&gt;\&lt;/code&gt;，比如在
&lt;code&gt;Markdown&lt;/code&gt;中。&lt;/p&gt;
&lt;h2 id="_3"&gt;测试&lt;/h2&gt;
&lt;p&gt;毕达哥拉斯定理：\(a^2+b^2=c^2\)&lt;/p&gt;
&lt;p&gt;正态分布：$$f\left(x\right)=\frac{1}{\sqrt{2\pi}\sigma}exp\left(-\frac{(x-\mu)^2}{2\sigma^2}\right)$$&lt;/p&gt;
&lt;p&gt;傅里叶变换：
\[F\left(\omega\right)=\mathcal{F}\left[f(t)\right]=\int_{-\infty}^{\infty}e^{-i\omega
T}dt\]&lt;/p&gt;
&lt;p&gt;傅里叶逆变换：
\[f\left(t\right)=\mathcal{F}^{-1}\left[F\left(\omega\right)\right]=\frac{1}{2\pi}\int_{-\infty}^{\infty}F\left(\omega\right)e^{i\omega t}d\omega\]&lt;/p&gt;
&lt;p&gt;MathJax的语法基本与latex一致，可以参考wikipedia的latex书写语法规范&lt;a href="http://zh.wikipedia.org/wiki/Help:%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F"&gt;Help:数学公式&lt;/a&gt;&lt;/p&gt;</summary><category term="LaTeX"></category><category term="Pelican"></category><category term="MathJax"></category></entry></feed>
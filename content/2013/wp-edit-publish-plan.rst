:title: WordPress文章编辑发布方案
:author: Joshz
:date: 2013-01-04
:tags: WordPress
:category: Technique
:slug: wp-edit-publish-plan

我已经不再使用WP作为博客平台，其中一个原因就是因为找不到一个适合自己的编辑发布工具链（也许是我太挑剔）。如果你也和我一样对这方面很不满意的话,想要了解其它的方案，这篇文章也许会有帮助。首先要说明的是编辑和发布是两个阶段，如果再详细点还应该包括修改阶段，下面的一些发布流程往往只能照顾到某一个方面，而在另一个方面就相形见绌，总有这样那样的瑕疵。基本上，WordPress的编辑发布方案有这么几大类：

后台发布
--------

这是默认的，也是便利性、兼容性最好的方案。但是它最大的缺点就在于一个字：慢。这个慢有两个方面，一是后台太笨重，如果你空间本来就不快（比如国外的空间），那加载后台都会等很久；二是WYSIWYG的编辑方式，如果你要搞长篇大论，图文并茂的话，上传图片、预览这些操作都是费事费力的。当然改进的方法也有：使用WP前台编辑插件（什么名字我忘了）、尽量不预览（对html熟悉程度要高）。

编辑器终端
----------

包括两大类：专用的和通用的。

专用的就有大名鼎鼎的WLW，这应该是许多人坚守Windows平台的原因之一吧。其它如qumana、thingamablog等，虽然可用，但是功能不完善，体验也不好。特别值得一提的是浏览器插件 `ScribeFireNext <https://addons.mozilla.org/en-us/firefox/addon/scribefire-next/>`_ ，比起WLW也未逊色多少，如果要跨平台的话可以一试。Linux下可以尝试 `这些 <http://paranimage.com/6-under-linux-blog-editor/>`_ 。

通用的也很多，这里又分两类：WYSIWYG和代码编辑器。所见即所得的比如M$ Office中的 `Word编辑器 <http://www.dongbinbin.com/2012/07/wordfabuboke/>`_ 就可以作为发布终端，`OneNote <http://hi.baidu.com/yumi44444/item/52e203d0c0f5d2e0b3f77789>`_ 也是选择之一。代码编辑器其实就是指VIM和emacs啦。用这两款编辑器发布文章往往可以使用一些轻量级标记语言，从而简化写作过程，但是修改过程可能很让人恼火。编辑器之神和神之编辑器都有相应的WordPress插件如vimpress、vimrepress和Weblogger Mode等，请读者自行搜索。

云服务中转
----------

这一类方案也有很多，可以举出许多例子：

* 邮箱转发
* Google docs发布
* 云笔记发布

命令行工具
-----------

这里强调的实际是发布工具。对于命令行geek而言，真正让他们恋恋不舍的其实是vim，emacs之流的编辑器神器加上Markdown这样的快速语法配合得到的强大的文章编辑工作流，至于发布，除了插件，第三方工具也是一个选择，比如 `基于Perl的命令行WordPress客户端`_ 。当然还有很多此类的工具，它们都基于 `标准的API`_ ，如果你喜欢，甚至可以自己编写一个。

.. _`基于Perl的命令行WordPress客户端`: http://mooninsky.net/history/?p=271
.. _`标准的API`: http://www.ibm.com/developerworks/cn/xml/x-metablog/

前两种方案有诸多限制，因此并不推荐。第三种方案我实践了一段时间，主要用 `麦库 <http://note.sdo.com/register?ac=634782146519602937>`_ 作为编辑终端，所有文章都存在网上，成文后在麦库发布然后复制粘贴到WP博客上，虽然发布过程麻烦，但是胜在编辑是在速度很快的云端，多地点写作的感觉很好。还有一个缺点是图片需要外链到麦库，太依赖此服务。

我的选择
---------

应该说选择还是很多的，不过我的要求更多，列表如下：

* 网络同步。因为我需要在不同地点都能够编辑文章，如果能够云端编辑更好，省去了同步的时间
* 较高的编辑效率。写文章的时候大量的格式修改、插入图片的操作很另人沮丧，编辑效率太低很影响写作的流畅度，WYSIWYG的方式尤其如此。
* 快速的响应，这是我讨厌后台发布文章的主因。
* 跨平台，windows和linux我都在使用，能够统一编辑当然是最好的。
* 延时发布机制。好的文章往往并非一蹴而就的，构思、动笔、不断的修改和打磨是正常的，这就需要草稿能够很好地保存且易于修改。
* 图片发布转存。文章里的图片、附件应当能够正确地上传到指定的地址且url可以自由定制。

基本上我的要求难以同时得到满足，所以有这么一个折腾的理由，我也就顺理成章地转到了Pelican上去了。静态博客当然也有它的缺点，不过暂时而言我对它的喜爱还是多一点的。

